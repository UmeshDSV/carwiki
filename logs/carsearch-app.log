2024-10-28 00:27:44 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Starting CarsearchApplication using Java 21.0.5 with PID 34316 (C:\carwiki\carwiki\target\classes started by dumes in C:\carwiki\carwiki)
2024-10-28 00:27:44 [restartedMain] DEBUG c.c.carsearch.CarsearchApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 00:27:44 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 00:27:45 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-10-28 00:27:45 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-10-28 00:27:45 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\carwiki\carwiki\compose.yaml'
2024-10-28 00:27:46 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Created
2024-10-28 00:27:46 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Created
2024-10-28 00:27:46 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Created
2024-10-28 00:27:46 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Starting
2024-10-28 00:27:46 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Starting
2024-10-28 00:27:46 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Starting
2024-10-28 00:27:47 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Started
2024-10-28 00:27:47 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Started
2024-10-28 00:27:47 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Started
2024-10-28 00:27:47 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Waiting
2024-10-28 00:27:47 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Waiting
2024-10-28 00:27:47 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Waiting
2024-10-28 00:27:48 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Healthy
2024-10-28 00:27:48 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Healthy
2024-10-28 00:27:48 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Healthy
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 0 Elasticsearch repository interfaces.
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 210 ms. Found 4 JPA repository interfaces.
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:27:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-10-28 00:27:58 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-28 00:27:58 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-28 00:27:58 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 00:27:58 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 00:27:58 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 00:27:58 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3235 ms
2024-10-28 00:27:59 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 00:27:59 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 00:27:59 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 00:27:59 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-10-28 00:27:59 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 00:28:00 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2d7e1a71
2024-10-28 00:28:00 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 00:28:00 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-10-28 00:28:01 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 00:28:01 [restartedMain] DEBUG org.hibernate.SQL - alter table variant drop foreign key FK68g66aoa9p0rvti6titgjpkpq
2024-10-28 00:28:02 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK3kf3tbt2jmd6gbfgh55c0hwv2
2024-10-28 00:28:02 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK33q8q6ex324k4mhc5hinwarnx
2024-10-28 00:28:02 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists car
2024-10-28 00:28:02 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists feature
2024-10-28 00:28:02 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant
2024-10-28 00:28:02 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant_feature
2024-10-28 00:28:02 [restartedMain] DEBUG org.hibernate.SQL - create table car (id bigint not null auto_increment, brand varchar(255), model varchar(255), thumbnail_url varchar(255), primary key (id)) engine=InnoDB
2024-10-28 00:28:02 [restartedMain] DEBUG org.hibernate.SQL - create table feature (id bigint not null auto_increment, name varchar(255) not null, primary key (id)) engine=InnoDB
2024-10-28 00:28:02 [restartedMain] DEBUG org.hibernate.SQL - create table variant (fuel_type tinyint check (fuel_type between 0 and 3), transmission_type tinyint check (transmission_type between 0 and 1), year_of_manufacture integer, car_id bigint, id bigint not null auto_increment, price bigint, name varchar(255) not null, related_cars json, primary key (id)) engine=InnoDB
2024-10-28 00:28:02 [restartedMain] DEBUG org.hibernate.SQL - create table variant_feature (car_id bigint, feature_id bigint, id bigint not null auto_increment, variant_id bigint, value varchar(255), primary key (id)) engine=InnoDB
2024-10-28 00:28:02 [restartedMain] DEBUG org.hibernate.SQL - alter table car add constraint UK1bh6mrchex5vsyjfvht8u4dhu unique (brand, model)
2024-10-28 00:28:02 [restartedMain] DEBUG org.hibernate.SQL - alter table feature add constraint UKjhueeftkn8ve8th8m8a2878dr unique (name)
2024-10-28 00:28:02 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint UKpq7n803hfxn02sey0e8fowmj5 unique (name)
2024-10-28 00:28:02 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint FK68g66aoa9p0rvti6titgjpkpq foreign key (car_id) references car (id)
2024-10-28 00:28:02 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK3kf3tbt2jmd6gbfgh55c0hwv2 foreign key (feature_id) references feature (id)
2024-10-28 00:28:02 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK33q8q6ex324k4mhc5hinwarnx foreign key (variant_id) references variant (id)
2024-10-28 00:28:02 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 00:28:03 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 00:28:04 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-10-28 00:28:04 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-28 00:28:04 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-28 00:28:04 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Started CarsearchApplication in 20.424 seconds (process running for 21.217)
2024-10-28 00:28:16 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-28 00:28:16 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-28 00:28:16 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:28:17 [http-nio-8080-exec-2] INFO  c.c.c.s.impl.FeatureServiceImpl - Successfully saved Features
2024-10-28 00:28:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0
2024-10-28 00:28:40 [http-nio-8080-exec-4] DEBUG c.c.c.service.impl.CarServiceImpl - Starting addCar process for CarDto: [CarDto(id=null, brand=Honda, model=City, thumbnailUrl=https://example.com/images/honda_city.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1500000, name=City ZX CVT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=8-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Cruise Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1300000, name=City V MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1600000, name=City ZX Diesel CVT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1400000, name=City V Diesel MT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1550000, name=City VX CVT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=8-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Power Folding Mirrors), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Ambient Lighting), VariantFeatureDto(id=null, variantId=null, featureId=12, featureName=null, value=Wireless Charger)])]), CarDto(id=null, brand=Honda, model=Amaze, thumbnailUrl=https://example.com/images/honda_amaze.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=950000, name=Amaze VX CVT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=870000, name=Amaze S Diesel MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1000000, name=Amaze ZX CVT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Auto Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=8-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Rear Camera)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=820000, name=Amaze V MT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=920000, name=Amaze S CVT Diesel, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=LED Headlamps)])]), CarDto(id=null, brand=Hyundai, model=i20, thumbnailUrl=https://example.com/images/hyundai_i20.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1100000, name=i20 Asta (O) AT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Rear Wiper)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=900000, name=i20 Sportz MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=950000, name=i20 Magna AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Touchscreen Display)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1000000, name=i20 Asta MT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1150000, name=i20 N Line, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Wiper), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera)])]), CarDto(id=null, brand=Hyundai, model=Venue, thumbnailUrl=https://example.com/images/hyundai_venue.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1300000, name=Venue SX (O) AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Automatic Headlamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=900000, name=Venue S Diesel MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Defogger), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1250000, name=Venue SX AT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=LED DRLs), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=850000, name=Venue E MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1350000, name=Venue SX Plus Diesel AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rear Defogger)])]), CarDto(id=null, brand=Tata, model=Nexon, thumbnailUrl=https://example.com/images/tata_nexon.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1400000, name=Nexon XZ+ AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Hill Start Assist), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Rear AC Vents)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1050000, name=Nexon XM MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Touchscreen Infotainment)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1150000, name=Nexon XMA AMT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Power Folding Mirrors), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Reverse Camera)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1000000, name=Nexon XE MT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Manual AC), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1500000, name=Nexon XZ+ Dual Tone, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Hill Start Assist), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rain-Sensing Wipers)])]), CarDto(id=null, brand=Tata, model=Harrier, thumbnailUrl=https://example.com/images/tata_harrier.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2200000, name=Harrier XZA+ AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Electronic Stability Program)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1900000, name=Harrier XT Plus MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=8-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2250000, name=Harrier Dark Edition AT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Dark Interior Theme), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Hill Descent Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rain-Sensing Wipers), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Push Start Button)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1700000, name=Harrier XE MT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Steering)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2400000, name=Harrier Kaziranga Edition, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Electronic Stability Program), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Hill Hold Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Push Start Button)])]), CarDto(id=null, brand=Mahindra, model=XUV700, thumbnailUrl=https://example.com/images/mahindra_xuv700.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2400000, name=XUV700 AX7 L AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=7 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Dual-Zone Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Blind Spot Monitoring)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=2000000, name=XUV700 AX5 MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Power Folding Mirrors)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=2250000, name=XUV700 AX7 AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rain-Sensing Wipers), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Hill Hold Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1800000, name=XUV700 MX MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=LED DRLs), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Touchscreen Infotainment)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2600000, name=XUV700 AX7 AWD AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=All-Wheel Drive), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=7 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Hill Descent Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Blind Spot Monitoring), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rain-Sensing Wipers)])]), CarDto(id=null, brand=Mahindra, model=Thar, thumbnailUrl=https://example.com/images/mahindra_thar.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1700000, name=Thar LX 4x4 AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1500000, name=Thar AX Opt MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Steering)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1600000, name=Thar LX 4x2 AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x2 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1400000, name=Thar AX MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x2 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1750000, name=Thar LX Hard Top AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control)])]), CarDto(id=null, brand=Maruti Suzuki, model=Baleno, thumbnailUrl=https://example.com/images/maruti_baleno.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=970000, name=Baleno Alpha CVT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Alloy Wheels)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=850000, name=Baleno Zeta MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=920000, name=Baleno Delta AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Alloy Wheels)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=750000, name=Baleno Sigma MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Manual AC), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1030000, name=Baleno Alpha AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Rear AC Vents)])]), CarDto(id=null, brand=Maruti Suzuki, model=Swift, thumbnailUrl=https://example.com/images/maruti_swift.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=850000, name=Swift ZXI+ AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=720000, name=Swift VXI MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Manual AC)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=790000, name=Swift VXI AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Reverse Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=650000, name=Swift LXI MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=900000, name=Swift ZXI+ Dual Tone, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Headlamps)])])]
2024-10-28 00:28:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG c.c.c.service.impl.CarServiceImpl - Mapped CarDto to Car entity: [com.carwiki.carsearch.model.Car@ad6ddd8, com.carwiki.carsearch.model.Car@17b05218, com.carwiki.carsearch.model.Car@1a2d5d0f, com.carwiki.carsearch.model.Car@6f6c2306, com.carwiki.carsearch.model.Car@53e80b2e, com.carwiki.carsearch.model.Car@46dda3d9, com.carwiki.carsearch.model.Car@36685b28, com.carwiki.carsearch.model.Car@38122af0, com.carwiki.carsearch.model.Car@2b30f7a7, com.carwiki.carsearch.model.Car@d85a73]
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:28:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0
2024-10-28 00:28:41 [http-nio-8080-exec-4] INFO  c.c.c.service.impl.CarServiceImpl - Successfully saved Cars
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:28:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:29:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:29:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select v1_0.car_id,v1_0.id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.car_id=?
2024-10-28 00:29:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 00:29:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:29:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:29:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:29:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:29:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 00:29:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:29:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:29:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 00:29:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:29:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 00:29:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:29:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:29:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 00:29:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:29:09 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Cannot serialize] with root cause
java.io.NotSerializableException: com.carwiki.carsearch.model.Variant
	at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1200)
	at java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1585)
	at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1542)
	at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1451)
	at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1194)
	at java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1585)
	at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1542)
	at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1451)
	at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1194)
	at java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:358)
	at java.base/java.util.HashMap.internalWriteEntries(HashMap.java:1952)
	at java.base/java.util.HashMap.writeObject(HashMap.java:1505)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1072)
	at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1529)
	at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1451)
	at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1194)
	at java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1585)
	at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1542)
	at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1451)
	at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1194)
	at java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:358)
	at java.base/java.util.ArrayList.writeObject(ArrayList.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1072)
	at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1529)
	at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1451)
	at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1194)
	at java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1585)
	at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1542)
	at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1451)
	at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1194)
	at java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:358)
	at org.springframework.core.serializer.DefaultSerializer.serialize(DefaultSerializer.java:46)
	at org.springframework.core.serializer.Serializer.serializeToByteArray(Serializer.java:56)
	at org.springframework.core.serializer.support.SerializingConverter.convert(SerializingConverter.java:60)
	at org.springframework.core.serializer.support.SerializingConverter.convert(SerializingConverter.java:33)
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.serialize(JdkSerializationRedisSerializer.java:95)
	at org.springframework.data.redis.serializer.DefaultRedisElementWriter.write(DefaultRedisElementWriter.java:42)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.write(RedisSerializationContext.java:292)
	at org.springframework.data.redis.cache.RedisCache.serializeCacheValue(RedisCache.java:363)
	at org.springframework.data.redis.cache.RedisCache.put(RedisCache.java:224)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doPut(AbstractCacheInvoker.java:87)
	at org.springframework.cache.interceptor.CacheAspectSupport$CachePutRequest.performCachePut(CacheAspectSupport.java:1037)
	at org.springframework.cache.interceptor.CacheAspectSupport$CachePutRequest.apply(CacheAspectSupport.java:1022)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:566)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:433)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.carwiki.carsearch.service.impl.CarServiceImpl$$SpringCGLIB$$0.getCarbyId(<generated>)
	at com.carwiki.carsearch.controller.CarController.getCarbyId(CarController.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-10-28 00:34:53 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 00:34:53 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-10-28 00:34:53 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-10-28 00:35:06 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Starting CarsearchApplication using Java 21.0.5 with PID 34540 (C:\carwiki\carwiki\target\classes started by dumes in C:\carwiki\carwiki)
2024-10-28 00:35:06 [restartedMain] DEBUG c.c.carsearch.CarsearchApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 00:35:06 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 00:35:06 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-10-28 00:35:06 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-10-28 00:35:06 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\carwiki\carwiki\compose.yaml'
2024-10-28 00:35:08 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Created
2024-10-28 00:35:08 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Created
2024-10-28 00:35:08 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Created
2024-10-28 00:35:08 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Starting
2024-10-28 00:35:08 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Starting
2024-10-28 00:35:08 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Starting
2024-10-28 00:35:09 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Started
2024-10-28 00:35:09 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Started
2024-10-28 00:35:09 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Started
2024-10-28 00:35:09 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Waiting
2024-10-28 00:35:09 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Waiting
2024-10-28 00:35:09 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Waiting
2024-10-28 00:35:09 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Healthy
2024-10-28 00:35:09 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Healthy
2024-10-28 00:35:09 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Healthy
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 0 Elasticsearch repository interfaces.
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 221 ms. Found 4 JPA repository interfaces.
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:35:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-10-28 00:35:36 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-28 00:35:36 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-28 00:35:36 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 00:35:36 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 00:35:36 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 00:35:36 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2441 ms
2024-10-28 00:35:36 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 00:35:37 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 00:35:37 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 00:35:37 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-10-28 00:35:37 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 00:35:38 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@56074a3f
2024-10-28 00:35:38 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 00:35:38 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-10-28 00:35:39 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 00:35:39 [restartedMain] DEBUG org.hibernate.SQL - alter table variant drop foreign key FK68g66aoa9p0rvti6titgjpkpq
2024-10-28 00:35:39 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK3kf3tbt2jmd6gbfgh55c0hwv2
2024-10-28 00:35:39 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK33q8q6ex324k4mhc5hinwarnx
2024-10-28 00:35:39 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists car
2024-10-28 00:35:39 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists feature
2024-10-28 00:35:39 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant
2024-10-28 00:35:39 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant_feature
2024-10-28 00:35:39 [restartedMain] DEBUG org.hibernate.SQL - create table car (id bigint not null auto_increment, brand varchar(255), model varchar(255), thumbnail_url varchar(255), primary key (id)) engine=InnoDB
2024-10-28 00:35:39 [restartedMain] DEBUG org.hibernate.SQL - create table feature (id bigint not null auto_increment, name varchar(255) not null, primary key (id)) engine=InnoDB
2024-10-28 00:35:39 [restartedMain] DEBUG org.hibernate.SQL - create table variant (fuel_type tinyint check (fuel_type between 0 and 3), transmission_type tinyint check (transmission_type between 0 and 1), year_of_manufacture integer, car_id bigint, id bigint not null auto_increment, price bigint, name varchar(255) not null, related_cars json, primary key (id)) engine=InnoDB
2024-10-28 00:35:39 [restartedMain] DEBUG org.hibernate.SQL - create table variant_feature (car_id bigint, feature_id bigint, id bigint not null auto_increment, variant_id bigint, value varchar(255), primary key (id)) engine=InnoDB
2024-10-28 00:35:39 [restartedMain] DEBUG org.hibernate.SQL - alter table car add constraint UK1bh6mrchex5vsyjfvht8u4dhu unique (brand, model)
2024-10-28 00:35:39 [restartedMain] DEBUG org.hibernate.SQL - alter table feature add constraint UKjhueeftkn8ve8th8m8a2878dr unique (name)
2024-10-28 00:35:39 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint UKpq7n803hfxn02sey0e8fowmj5 unique (name)
2024-10-28 00:35:39 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint FK68g66aoa9p0rvti6titgjpkpq foreign key (car_id) references car (id)
2024-10-28 00:35:39 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK3kf3tbt2jmd6gbfgh55c0hwv2 foreign key (feature_id) references feature (id)
2024-10-28 00:35:39 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK33q8q6ex324k4mhc5hinwarnx foreign key (variant_id) references variant (id)
2024-10-28 00:35:39 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 00:35:40 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 00:35:41 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-10-28 00:35:41 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-28 00:35:41 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-28 00:35:41 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Started CarsearchApplication in 35.229 seconds (process running for 35.874)
2024-10-28 00:35:52 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-28 00:35:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-28 00:35:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:35:52 [http-nio-8080-exec-1] INFO  c.c.c.s.impl.FeatureServiceImpl - Successfully saved Features
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG c.c.c.service.impl.CarServiceImpl - Starting addCar process for CarDto: [CarDto(id=null, brand=Honda, model=City, thumbnailUrl=https://example.com/images/honda_city.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1500000, name=City ZX CVT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=8-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Cruise Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1300000, name=City V MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1600000, name=City ZX Diesel CVT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1400000, name=City V Diesel MT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1550000, name=City VX CVT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=8-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Power Folding Mirrors), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Ambient Lighting), VariantFeatureDto(id=null, variantId=null, featureId=12, featureName=null, value=Wireless Charger)])]), CarDto(id=null, brand=Honda, model=Amaze, thumbnailUrl=https://example.com/images/honda_amaze.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=950000, name=Amaze VX CVT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=870000, name=Amaze S Diesel MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1000000, name=Amaze ZX CVT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Auto Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=8-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Rear Camera)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=820000, name=Amaze V MT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=920000, name=Amaze S CVT Diesel, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=LED Headlamps)])]), CarDto(id=null, brand=Hyundai, model=i20, thumbnailUrl=https://example.com/images/hyundai_i20.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1100000, name=i20 Asta (O) AT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Rear Wiper)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=900000, name=i20 Sportz MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=950000, name=i20 Magna AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Touchscreen Display)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1000000, name=i20 Asta MT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1150000, name=i20 N Line, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Wiper), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera)])]), CarDto(id=null, brand=Hyundai, model=Venue, thumbnailUrl=https://example.com/images/hyundai_venue.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1300000, name=Venue SX (O) AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Automatic Headlamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=900000, name=Venue S Diesel MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Defogger), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1250000, name=Venue SX AT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=LED DRLs), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=850000, name=Venue E MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1350000, name=Venue SX Plus Diesel AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rear Defogger)])]), CarDto(id=null, brand=Tata, model=Nexon, thumbnailUrl=https://example.com/images/tata_nexon.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1400000, name=Nexon XZ+ AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Hill Start Assist), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Rear AC Vents)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1050000, name=Nexon XM MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Touchscreen Infotainment)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1150000, name=Nexon XMA AMT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Power Folding Mirrors), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Reverse Camera)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1000000, name=Nexon XE MT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Manual AC), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1500000, name=Nexon XZ+ Dual Tone, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Hill Start Assist), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rain-Sensing Wipers)])]), CarDto(id=null, brand=Tata, model=Harrier, thumbnailUrl=https://example.com/images/tata_harrier.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2200000, name=Harrier XZA+ AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Electronic Stability Program)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1900000, name=Harrier XT Plus MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=8-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2250000, name=Harrier Dark Edition AT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Dark Interior Theme), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Hill Descent Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rain-Sensing Wipers), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Push Start Button)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1700000, name=Harrier XE MT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Steering)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2400000, name=Harrier Kaziranga Edition, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Electronic Stability Program), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Hill Hold Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Push Start Button)])]), CarDto(id=null, brand=Mahindra, model=XUV700, thumbnailUrl=https://example.com/images/mahindra_xuv700.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2400000, name=XUV700 AX7 L AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=7 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Dual-Zone Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Blind Spot Monitoring)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=2000000, name=XUV700 AX5 MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Power Folding Mirrors)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=2250000, name=XUV700 AX7 AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rain-Sensing Wipers), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Hill Hold Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1800000, name=XUV700 MX MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=LED DRLs), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Touchscreen Infotainment)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2600000, name=XUV700 AX7 AWD AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=All-Wheel Drive), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=7 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Hill Descent Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Blind Spot Monitoring), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rain-Sensing Wipers)])]), CarDto(id=null, brand=Mahindra, model=Thar, thumbnailUrl=https://example.com/images/mahindra_thar.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1700000, name=Thar LX 4x4 AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1500000, name=Thar AX Opt MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Steering)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1600000, name=Thar LX 4x2 AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x2 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1400000, name=Thar AX MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x2 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1750000, name=Thar LX Hard Top AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control)])]), CarDto(id=null, brand=Maruti Suzuki, model=Baleno, thumbnailUrl=https://example.com/images/maruti_baleno.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=970000, name=Baleno Alpha CVT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Alloy Wheels)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=850000, name=Baleno Zeta MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=920000, name=Baleno Delta AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Alloy Wheels)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=750000, name=Baleno Sigma MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Manual AC), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1030000, name=Baleno Alpha AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Rear AC Vents)])]), CarDto(id=null, brand=Maruti Suzuki, model=Swift, thumbnailUrl=https://example.com/images/maruti_swift.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=850000, name=Swift ZXI+ AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=720000, name=Swift VXI MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Manual AC)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=790000, name=Swift VXI AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Reverse Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=650000, name=Swift LXI MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=900000, name=Swift ZXI+ Dual Tone, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Headlamps)])])]
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG c.c.c.service.impl.CarServiceImpl - Mapped CarDto to Car entity: [com.carwiki.carsearch.model.Car@49e897d0, com.carwiki.carsearch.model.Car@7c317db5, com.carwiki.carsearch.model.Car@7c868f86, com.carwiki.carsearch.model.Car@6439508f, com.carwiki.carsearch.model.Car@69e20dcf, com.carwiki.carsearch.model.Car@1e490993, com.carwiki.carsearch.model.Car@56fb4f63, com.carwiki.carsearch.model.Car@7868d01b, com.carwiki.carsearch.model.Car@19d26ac, com.carwiki.carsearch.model.Car@57ceb29d]
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0
2024-10-28 00:35:58 [http-nio-8080-exec-3] INFO  c.c.c.service.impl.CarServiceImpl - Successfully saved Cars
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.car_id,v1_0.id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.car_id=?
2024-10-28 00:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 00:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 00:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 00:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 00:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 00:36:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:36:02 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.data.redis.serializer.SerializationException: Cannot serialize] with root cause
java.io.NotSerializableException: com.carwiki.carsearch.model.Variant
	at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1200)
	at java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1585)
	at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1542)
	at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1451)
	at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1194)
	at java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1585)
	at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1542)
	at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1451)
	at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1194)
	at java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:358)
	at java.base/java.util.HashMap.internalWriteEntries(HashMap.java:1952)
	at java.base/java.util.HashMap.writeObject(HashMap.java:1505)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1072)
	at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1529)
	at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1451)
	at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1194)
	at java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1585)
	at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1542)
	at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1451)
	at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1194)
	at java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:358)
	at java.base/java.util.ArrayList.writeObject(ArrayList.java:948)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1072)
	at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1529)
	at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1451)
	at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1194)
	at java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1585)
	at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1542)
	at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1451)
	at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1194)
	at java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:358)
	at org.springframework.core.serializer.DefaultSerializer.serialize(DefaultSerializer.java:46)
	at org.springframework.core.serializer.Serializer.serializeToByteArray(Serializer.java:56)
	at org.springframework.core.serializer.support.SerializingConverter.convert(SerializingConverter.java:60)
	at org.springframework.core.serializer.support.SerializingConverter.convert(SerializingConverter.java:33)
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.serialize(JdkSerializationRedisSerializer.java:95)
	at org.springframework.data.redis.serializer.DefaultRedisElementWriter.write(DefaultRedisElementWriter.java:42)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.write(RedisSerializationContext.java:292)
	at org.springframework.data.redis.cache.RedisCache.serializeCacheValue(RedisCache.java:363)
	at org.springframework.data.redis.cache.RedisCache.put(RedisCache.java:224)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doPut(AbstractCacheInvoker.java:87)
	at org.springframework.cache.interceptor.CacheAspectSupport$CachePutRequest.performCachePut(CacheAspectSupport.java:1037)
	at org.springframework.cache.interceptor.CacheAspectSupport$CachePutRequest.apply(CacheAspectSupport.java:1022)
	at org.springframework.cache.interceptor.CacheAspectSupport.evaluate(CacheAspectSupport.java:566)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:433)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:395)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.carwiki.carsearch.service.impl.CarServiceImpl$$SpringCGLIB$$0.getCarbyId(<generated>)
	at com.carwiki.carsearch.controller.CarController.getCarbyId(CarController.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-10-28 00:41:03 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)
2024-10-28 00:41:03 [Thread-21] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2024-10-28 00:41:03 [Thread-21] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 00:41:03 [Thread-21] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-10-28 00:41:03 [Thread-21] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-10-28 00:41:03 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Starting CarsearchApplication using Java 21.0.5 with PID 34540 (C:\carwiki\carwiki\target\classes started by dumes in C:\carwiki\carwiki)
2024-10-28 00:41:03 [restartedMain] DEBUG c.c.carsearch.CarsearchApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 00:41:03 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 00:41:03 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\carwiki\carwiki\compose.yaml'
2024-10-28 00:41:04 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - There are already Docker Compose services running, skipping startup
2024-10-28 00:41:04 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:41:04 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-10-28 00:41:04 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:41:04 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:41:04 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:41:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:41:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Elasticsearch repository interfaces.
2024-10-28 00:41:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:41:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-10-28 00:41:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:41:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:41:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:41:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:41:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-10-28 00:41:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:41:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-10-28 00:41:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 4 JPA repository interfaces.
2024-10-28 00:41:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:41:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-10-28 00:41:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:41:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:41:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:41:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:41:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-10-28 00:41:05 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-28 00:41:05 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-28 00:41:05 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 00:41:05 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 00:41:05 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 00:41:05 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 520 ms
2024-10-28 00:41:05 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 00:41:05 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 00:41:05 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-10-28 00:41:05 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2024-10-28 00:41:05 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6f800bd
2024-10-28 00:41:05 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2024-10-28 00:41:05 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-10-28 00:41:05 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 00:41:05 [restartedMain] DEBUG org.hibernate.SQL - alter table variant drop foreign key FK68g66aoa9p0rvti6titgjpkpq
2024-10-28 00:41:05 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK3kf3tbt2jmd6gbfgh55c0hwv2
2024-10-28 00:41:05 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK33q8q6ex324k4mhc5hinwarnx
2024-10-28 00:41:05 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists car
2024-10-28 00:41:05 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists feature
2024-10-28 00:41:05 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant
2024-10-28 00:41:05 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant_feature
2024-10-28 00:41:05 [restartedMain] DEBUG org.hibernate.SQL - create table car (id bigint not null auto_increment, brand varchar(255), model varchar(255), thumbnail_url varchar(255), primary key (id)) engine=InnoDB
2024-10-28 00:41:05 [restartedMain] DEBUG org.hibernate.SQL - create table feature (id bigint not null auto_increment, name varchar(255) not null, primary key (id)) engine=InnoDB
2024-10-28 00:41:05 [restartedMain] DEBUG org.hibernate.SQL - create table variant (fuel_type tinyint check (fuel_type between 0 and 3), transmission_type tinyint check (transmission_type between 0 and 1), year_of_manufacture integer, car_id bigint, id bigint not null auto_increment, price bigint, name varchar(255) not null, related_cars json, primary key (id)) engine=InnoDB
2024-10-28 00:41:05 [restartedMain] DEBUG org.hibernate.SQL - create table variant_feature (car_id bigint, feature_id bigint, id bigint not null auto_increment, variant_id bigint, value varchar(255), primary key (id)) engine=InnoDB
2024-10-28 00:41:05 [restartedMain] DEBUG org.hibernate.SQL - alter table car add constraint UK1bh6mrchex5vsyjfvht8u4dhu unique (brand, model)
2024-10-28 00:41:05 [restartedMain] DEBUG org.hibernate.SQL - alter table feature add constraint UKjhueeftkn8ve8th8m8a2878dr unique (name)
2024-10-28 00:41:05 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint UKpq7n803hfxn02sey0e8fowmj5 unique (name)
2024-10-28 00:41:05 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint FK68g66aoa9p0rvti6titgjpkpq foreign key (car_id) references car (id)
2024-10-28 00:41:05 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK3kf3tbt2jmd6gbfgh55c0hwv2 foreign key (feature_id) references feature (id)
2024-10-28 00:41:05 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK33q8q6ex324k4mhc5hinwarnx foreign key (variant_id) references variant (id)
2024-10-28 00:41:06 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 00:41:06 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 00:41:06 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-10-28 00:41:06 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-28 00:41:06 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-28 00:41:06 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Started CarsearchApplication in 2.66 seconds (process running for 360.943)
2024-10-28 00:41:06 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2024-10-28 00:41:06 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 00:41:06 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2024-10-28 00:41:06 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2024-10-28 00:43:58 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Starting CarsearchApplication using Java 21.0.5 with PID 30996 (C:\carwiki\carwiki\target\classes started by dumes in C:\carwiki\carwiki)
2024-10-28 00:43:58 [restartedMain] DEBUG c.c.carsearch.CarsearchApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 00:43:58 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 00:43:58 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-10-28 00:43:58 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-10-28 00:43:58 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\carwiki\carwiki\compose.yaml'
2024-10-28 00:44:00 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Created
2024-10-28 00:44:00 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Created
2024-10-28 00:44:00 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Created
2024-10-28 00:44:00 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Starting
2024-10-28 00:44:00 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Starting
2024-10-28 00:44:00 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Starting
2024-10-28 00:44:01 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Started
2024-10-28 00:44:01 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Started
2024-10-28 00:44:01 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Started
2024-10-28 00:44:01 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Waiting
2024-10-28 00:44:01 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Waiting
2024-10-28 00:44:01 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Waiting
2024-10-28 00:44:01 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Healthy
2024-10-28 00:44:01 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Healthy
2024-10-28 00:44:01 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Healthy
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36 ms. Found 0 Elasticsearch repository interfaces.
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 154 ms. Found 4 JPA repository interfaces.
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:44:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-10-28 00:44:26 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-28 00:44:26 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-28 00:44:26 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 00:44:26 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 00:44:26 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 00:44:26 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2405 ms
2024-10-28 00:44:27 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 00:44:27 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 00:44:27 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 00:44:27 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-10-28 00:44:28 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 00:44:28 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@54fdfb8c
2024-10-28 00:44:28 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 00:44:28 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-10-28 00:44:29 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 00:44:29 [restartedMain] DEBUG org.hibernate.SQL - alter table variant drop foreign key FK68g66aoa9p0rvti6titgjpkpq
2024-10-28 00:44:29 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK3kf3tbt2jmd6gbfgh55c0hwv2
2024-10-28 00:44:29 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK33q8q6ex324k4mhc5hinwarnx
2024-10-28 00:44:29 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists car
2024-10-28 00:44:29 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists feature
2024-10-28 00:44:29 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant
2024-10-28 00:44:29 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant_feature
2024-10-28 00:44:29 [restartedMain] DEBUG org.hibernate.SQL - create table car (id bigint not null auto_increment, brand varchar(255), model varchar(255), thumbnail_url varchar(255), primary key (id)) engine=InnoDB
2024-10-28 00:44:29 [restartedMain] DEBUG org.hibernate.SQL - create table feature (id bigint not null auto_increment, name varchar(255) not null, primary key (id)) engine=InnoDB
2024-10-28 00:44:30 [restartedMain] DEBUG org.hibernate.SQL - create table variant (fuel_type tinyint check (fuel_type between 0 and 3), transmission_type tinyint check (transmission_type between 0 and 1), year_of_manufacture integer, car_id bigint, id bigint not null auto_increment, price bigint, name varchar(255) not null, related_cars json, primary key (id)) engine=InnoDB
2024-10-28 00:44:30 [restartedMain] DEBUG org.hibernate.SQL - create table variant_feature (car_id bigint, feature_id bigint, id bigint not null auto_increment, variant_id bigint, value varchar(255), primary key (id)) engine=InnoDB
2024-10-28 00:44:30 [restartedMain] DEBUG org.hibernate.SQL - alter table car add constraint UK1bh6mrchex5vsyjfvht8u4dhu unique (brand, model)
2024-10-28 00:44:30 [restartedMain] DEBUG org.hibernate.SQL - alter table feature add constraint UKjhueeftkn8ve8th8m8a2878dr unique (name)
2024-10-28 00:44:30 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint UKpq7n803hfxn02sey0e8fowmj5 unique (name)
2024-10-28 00:44:30 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint FK68g66aoa9p0rvti6titgjpkpq foreign key (car_id) references car (id)
2024-10-28 00:44:30 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK3kf3tbt2jmd6gbfgh55c0hwv2 foreign key (feature_id) references feature (id)
2024-10-28 00:44:30 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK33q8q6ex324k4mhc5hinwarnx foreign key (variant_id) references variant (id)
2024-10-28 00:44:30 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 00:44:30 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 00:44:32 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-10-28 00:44:32 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-28 00:44:32 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-28 00:44:32 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Started CarsearchApplication in 34.158 seconds (process running for 34.776)
2024-10-28 00:44:48 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-28 00:44:48 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-28 00:44:48 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:44:48 [http-nio-8080-exec-2] INFO  c.c.c.s.impl.FeatureServiceImpl - Successfully saved Features
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG c.c.c.service.impl.CarServiceImpl - Starting addCar process for CarDto: [CarDto(id=null, brand=Honda, model=City, thumbnailUrl=https://example.com/images/honda_city.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1500000, name=City ZX CVT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=8-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Cruise Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1300000, name=City V MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1600000, name=City ZX Diesel CVT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1400000, name=City V Diesel MT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1550000, name=City VX CVT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=8-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Power Folding Mirrors), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Ambient Lighting), VariantFeatureDto(id=null, variantId=null, featureId=12, featureName=null, value=Wireless Charger)])]), CarDto(id=null, brand=Honda, model=Amaze, thumbnailUrl=https://example.com/images/honda_amaze.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=950000, name=Amaze VX CVT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=870000, name=Amaze S Diesel MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1000000, name=Amaze ZX CVT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Auto Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=8-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Rear Camera)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=820000, name=Amaze V MT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=920000, name=Amaze S CVT Diesel, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=LED Headlamps)])]), CarDto(id=null, brand=Hyundai, model=i20, thumbnailUrl=https://example.com/images/hyundai_i20.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1100000, name=i20 Asta (O) AT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Rear Wiper)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=900000, name=i20 Sportz MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=950000, name=i20 Magna AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Touchscreen Display)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1000000, name=i20 Asta MT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1150000, name=i20 N Line, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Wiper), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera)])]), CarDto(id=null, brand=Hyundai, model=Venue, thumbnailUrl=https://example.com/images/hyundai_venue.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1300000, name=Venue SX (O) AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Automatic Headlamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=900000, name=Venue S Diesel MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Defogger), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1250000, name=Venue SX AT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=LED DRLs), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=850000, name=Venue E MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1350000, name=Venue SX Plus Diesel AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rear Defogger)])]), CarDto(id=null, brand=Tata, model=Nexon, thumbnailUrl=https://example.com/images/tata_nexon.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1400000, name=Nexon XZ+ AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Hill Start Assist), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Rear AC Vents)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1050000, name=Nexon XM MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Touchscreen Infotainment)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1150000, name=Nexon XMA AMT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Power Folding Mirrors), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Reverse Camera)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1000000, name=Nexon XE MT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Manual AC), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1500000, name=Nexon XZ+ Dual Tone, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Hill Start Assist), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rain-Sensing Wipers)])]), CarDto(id=null, brand=Tata, model=Harrier, thumbnailUrl=https://example.com/images/tata_harrier.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2200000, name=Harrier XZA+ AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Electronic Stability Program)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1900000, name=Harrier XT Plus MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=8-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2250000, name=Harrier Dark Edition AT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Dark Interior Theme), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Hill Descent Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rain-Sensing Wipers), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Push Start Button)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1700000, name=Harrier XE MT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Steering)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2400000, name=Harrier Kaziranga Edition, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Electronic Stability Program), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Hill Hold Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Push Start Button)])]), CarDto(id=null, brand=Mahindra, model=XUV700, thumbnailUrl=https://example.com/images/mahindra_xuv700.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2400000, name=XUV700 AX7 L AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=7 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Dual-Zone Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Blind Spot Monitoring)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=2000000, name=XUV700 AX5 MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Power Folding Mirrors)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=2250000, name=XUV700 AX7 AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rain-Sensing Wipers), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Hill Hold Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1800000, name=XUV700 MX MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=LED DRLs), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Touchscreen Infotainment)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2600000, name=XUV700 AX7 AWD AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=All-Wheel Drive), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=7 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Hill Descent Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Blind Spot Monitoring), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rain-Sensing Wipers)])]), CarDto(id=null, brand=Mahindra, model=Thar, thumbnailUrl=https://example.com/images/mahindra_thar.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1700000, name=Thar LX 4x4 AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1500000, name=Thar AX Opt MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Steering)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1600000, name=Thar LX 4x2 AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x2 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1400000, name=Thar AX MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x2 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1750000, name=Thar LX Hard Top AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control)])]), CarDto(id=null, brand=Maruti Suzuki, model=Baleno, thumbnailUrl=https://example.com/images/maruti_baleno.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=970000, name=Baleno Alpha CVT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Alloy Wheels)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=850000, name=Baleno Zeta MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=920000, name=Baleno Delta AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Alloy Wheels)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=750000, name=Baleno Sigma MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Manual AC), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1030000, name=Baleno Alpha AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Rear AC Vents)])]), CarDto(id=null, brand=Maruti Suzuki, model=Swift, thumbnailUrl=https://example.com/images/maruti_swift.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=850000, name=Swift ZXI+ AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=720000, name=Swift VXI MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Manual AC)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=790000, name=Swift VXI AT, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Reverse Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=650000, name=Swift LXI MT, yearOfManufacture=2023, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=900000, name=Swift ZXI+ Dual Tone, yearOfManufacture=2024, relatedCars=null, car=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Headlamps)])])]
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG c.c.c.service.impl.CarServiceImpl - Mapped CarDto to Car entity: [com.carwiki.carsearch.model.Car@6df33fdc, com.carwiki.carsearch.model.Car@5d43e58d, com.carwiki.carsearch.model.Car@412414a4, com.carwiki.carsearch.model.Car@2a4229db, com.carwiki.carsearch.model.Car@5e3bfe90, com.carwiki.carsearch.model.Car@1c161757, com.carwiki.carsearch.model.Car@7d76a145, com.carwiki.carsearch.model.Car@464143c1, com.carwiki.carsearch.model.Car@470feae7, com.carwiki.carsearch.model.Car@6b0fe1fe]
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0
2024-10-28 00:44:54 [http-nio-8080-exec-3] INFO  c.c.c.service.impl.CarServiceImpl - Successfully saved Cars
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.car_id,v1_0.id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.car_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:44:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 00:50:26 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
2024-10-28 00:50:26 [Thread-21] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2024-10-28 00:50:26 [Thread-21] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 00:50:26 [Thread-21] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-10-28 00:50:26 [Thread-21] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-10-28 00:50:26 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Starting CarsearchApplication using Java 21.0.5 with PID 30996 (C:\carwiki\carwiki\target\classes started by dumes in C:\carwiki\carwiki)
2024-10-28 00:50:26 [restartedMain] DEBUG c.c.carsearch.CarsearchApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 00:50:26 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 00:50:26 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\carwiki\carwiki\compose.yaml'
2024-10-28 00:50:27 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - There are already Docker Compose services running, skipping startup
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Elasticsearch repository interfaces.
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 4 JPA repository interfaces.
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:50:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-10-28 00:50:27 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-28 00:50:27 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-28 00:50:27 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 00:50:27 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 00:50:27 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 00:50:27 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 398 ms
2024-10-28 00:50:27 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 00:50:27 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 00:50:27 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-10-28 00:50:27 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2024-10-28 00:50:27 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@36127853
2024-10-28 00:50:27 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2024-10-28 00:50:27 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-10-28 00:50:27 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 00:50:27 [restartedMain] DEBUG org.hibernate.SQL - alter table variant drop foreign key FK68g66aoa9p0rvti6titgjpkpq
2024-10-28 00:50:28 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK3kf3tbt2jmd6gbfgh55c0hwv2
2024-10-28 00:50:28 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK33q8q6ex324k4mhc5hinwarnx
2024-10-28 00:50:28 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists car
2024-10-28 00:50:28 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists feature
2024-10-28 00:50:28 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant
2024-10-28 00:50:28 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant_feature
2024-10-28 00:50:28 [restartedMain] DEBUG org.hibernate.SQL - create table car (id bigint not null auto_increment, brand varchar(255), model varchar(255), thumbnail_url varchar(255), primary key (id)) engine=InnoDB
2024-10-28 00:50:28 [restartedMain] DEBUG org.hibernate.SQL - create table feature (id bigint not null auto_increment, name varchar(255) not null, primary key (id)) engine=InnoDB
2024-10-28 00:50:28 [restartedMain] DEBUG org.hibernate.SQL - create table variant (fuel_type tinyint check (fuel_type between 0 and 3), transmission_type tinyint check (transmission_type between 0 and 1), year_of_manufacture integer, car_id bigint, id bigint not null auto_increment, price bigint, name varchar(255) not null, related_cars json, primary key (id)) engine=InnoDB
2024-10-28 00:50:28 [restartedMain] DEBUG org.hibernate.SQL - create table variant_feature (car_id bigint, feature_id bigint, id bigint not null auto_increment, variant_id bigint, value varchar(255), primary key (id)) engine=InnoDB
2024-10-28 00:50:28 [restartedMain] DEBUG org.hibernate.SQL - alter table car add constraint UK1bh6mrchex5vsyjfvht8u4dhu unique (brand, model)
2024-10-28 00:50:28 [restartedMain] DEBUG org.hibernate.SQL - alter table feature add constraint UKjhueeftkn8ve8th8m8a2878dr unique (name)
2024-10-28 00:50:28 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint UKpq7n803hfxn02sey0e8fowmj5 unique (name)
2024-10-28 00:50:28 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint FK68g66aoa9p0rvti6titgjpkpq foreign key (car_id) references car (id)
2024-10-28 00:50:28 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK3kf3tbt2jmd6gbfgh55c0hwv2 foreign key (feature_id) references feature (id)
2024-10-28 00:50:28 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK33q8q6ex324k4mhc5hinwarnx foreign key (variant_id) references variant (id)
2024-10-28 00:50:28 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 00:50:28 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 00:50:28 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-10-28 00:50:28 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-28 00:50:28 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-28 00:50:28 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Started CarsearchApplication in 2.436 seconds (process running for 391.541)
2024-10-28 00:50:28 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2024-10-28 00:50:35 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
2024-10-28 00:50:35 [Thread-23] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2024-10-28 00:50:35 [Thread-23] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 00:50:35 [Thread-23] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2024-10-28 00:50:35 [Thread-23] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2024-10-28 00:50:35 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Starting CarsearchApplication using Java 21.0.5 with PID 30996 (C:\carwiki\carwiki\target\classes started by dumes in C:\carwiki\carwiki)
2024-10-28 00:50:35 [restartedMain] DEBUG c.c.carsearch.CarsearchApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 00:50:35 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 00:50:35 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\carwiki\carwiki\compose.yaml'
2024-10-28 00:50:36 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - There are already Docker Compose services running, skipping startup
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Elasticsearch repository interfaces.
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 4 JPA repository interfaces.
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:50:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-10-28 00:50:36 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-28 00:50:36 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-28 00:50:36 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 00:50:36 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 00:50:36 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 00:50:36 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 334 ms
2024-10-28 00:50:36 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 00:50:36 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 00:50:36 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-10-28 00:50:36 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2024-10-28 00:50:36 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@79cae581
2024-10-28 00:50:36 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2024-10-28 00:50:36 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-10-28 00:50:36 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 00:50:36 [restartedMain] DEBUG org.hibernate.SQL - alter table variant drop foreign key FK68g66aoa9p0rvti6titgjpkpq
2024-10-28 00:50:36 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK3kf3tbt2jmd6gbfgh55c0hwv2
2024-10-28 00:50:36 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK33q8q6ex324k4mhc5hinwarnx
2024-10-28 00:50:36 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists car
2024-10-28 00:50:37 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists feature
2024-10-28 00:50:37 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant
2024-10-28 00:50:37 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant_feature
2024-10-28 00:50:37 [restartedMain] DEBUG org.hibernate.SQL - create table car (id bigint not null auto_increment, brand varchar(255), model varchar(255), thumbnail_url varchar(255), primary key (id)) engine=InnoDB
2024-10-28 00:50:37 [restartedMain] DEBUG org.hibernate.SQL - create table feature (id bigint not null auto_increment, name varchar(255) not null, primary key (id)) engine=InnoDB
2024-10-28 00:50:37 [restartedMain] DEBUG org.hibernate.SQL - create table variant (fuel_type tinyint check (fuel_type between 0 and 3), transmission_type tinyint check (transmission_type between 0 and 1), year_of_manufacture integer, car_id bigint, id bigint not null auto_increment, price bigint, name varchar(255) not null, related_cars json, primary key (id)) engine=InnoDB
2024-10-28 00:50:37 [restartedMain] DEBUG org.hibernate.SQL - create table variant_feature (car_id bigint, feature_id bigint, id bigint not null auto_increment, variant_id bigint, value varchar(255), primary key (id)) engine=InnoDB
2024-10-28 00:50:37 [restartedMain] DEBUG org.hibernate.SQL - alter table car add constraint UK1bh6mrchex5vsyjfvht8u4dhu unique (brand, model)
2024-10-28 00:50:37 [restartedMain] DEBUG org.hibernate.SQL - alter table feature add constraint UKjhueeftkn8ve8th8m8a2878dr unique (name)
2024-10-28 00:50:37 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint UKpq7n803hfxn02sey0e8fowmj5 unique (name)
2024-10-28 00:50:37 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint FK68g66aoa9p0rvti6titgjpkpq foreign key (car_id) references car (id)
2024-10-28 00:50:37 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK3kf3tbt2jmd6gbfgh55c0hwv2 foreign key (feature_id) references feature (id)
2024-10-28 00:50:37 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK33q8q6ex324k4mhc5hinwarnx foreign key (variant_id) references variant (id)
2024-10-28 00:50:37 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 00:50:37 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'variantController': Unsatisfied dependency expressed through field 'variantService': Error creating bean with name 'variantServiceImpl' defined in file [C:\carwiki\carwiki\target\classes\com\carwiki\carsearch\service\impl\VariantServiceImpl.class]: Failed to instantiate [com.carwiki.carsearch.service.impl.VariantServiceImpl]: Constructor threw exception
2024-10-28 00:50:37 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 00:50:37 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2024-10-28 00:50:37 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2024-10-28 00:50:37 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2024-10-28 00:50:37 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-10-28 00:50:37 [restartedMain] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'variantController': Unsatisfied dependency expressed through field 'variantService': Error creating bean with name 'variantServiceImpl' defined in file [C:\carwiki\carwiki\target\classes\com\carwiki\carsearch\service\impl\VariantServiceImpl.class]: Failed to instantiate [com.carwiki.carsearch.service.impl.VariantServiceImpl]: Constructor threw exception
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.carwiki.carsearch.CarsearchApplication.main(CarsearchApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'variantServiceImpl' defined in file [C:\carwiki\carwiki\target\classes\com\carwiki\carsearch\service\impl\VariantServiceImpl.class]: Failed to instantiate [com.carwiki.carsearch.service.impl.VariantServiceImpl]: Constructor threw exception
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	... 23 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.carwiki.carsearch.service.impl.VariantServiceImpl]: Constructor threw exception
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:221)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:94)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1331)
	... 34 common frames omitted
Caused by: java.lang.Error: Unresolved compilation problems: 
	The method map(Function<? super VariantDto,? extends R>) in the type Stream<VariantDto> is not applicable for the arguments (VariantDto::getCarId)
	The type VariantDto does not define getCarId(VariantDto) that is applicable here
	The method getCarId() is undefined for the type VariantDto
	The method getCarId() is undefined for the type VariantDto

	at com.carwiki.carsearch.service.impl.VariantServiceImpl.<init>(VariantServiceImpl.java:31)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:195)
	... 36 common frames omitted
2024-10-28 00:52:21 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Starting CarsearchApplication using Java 21.0.5 with PID 12676 (C:\carwiki\carwiki\target\classes started by dumes in C:\carwiki\carwiki)
2024-10-28 00:52:21 [restartedMain] DEBUG c.c.carsearch.CarsearchApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 00:52:21 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 00:52:21 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-10-28 00:52:21 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-10-28 00:52:21 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\carwiki\carwiki\compose.yaml'
2024-10-28 00:52:23 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Created
2024-10-28 00:52:23 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Created
2024-10-28 00:52:23 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Created
2024-10-28 00:52:23 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Starting
2024-10-28 00:52:23 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Starting
2024-10-28 00:52:23 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Starting
2024-10-28 00:52:24 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Started
2024-10-28 00:52:24 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Started
2024-10-28 00:52:24 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Started
2024-10-28 00:52:24 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Waiting
2024-10-28 00:52:24 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Waiting
2024-10-28 00:52:24 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Waiting
2024-10-28 00:52:24 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Healthy
2024-10-28 00:52:24 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Healthy
2024-10-28 00:52:24 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Healthy
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 0 Elasticsearch repository interfaces.
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 151 ms. Found 4 JPA repository interfaces.
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:52:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-10-28 00:52:52 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-28 00:52:52 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-28 00:52:52 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 00:52:52 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 00:52:52 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 00:52:52 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2496 ms
2024-10-28 00:52:52 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 00:52:53 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 00:52:53 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 00:52:53 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-10-28 00:52:53 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 00:52:54 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1989f64b
2024-10-28 00:52:54 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 00:52:54 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-10-28 00:52:55 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 00:52:55 [restartedMain] DEBUG org.hibernate.SQL - alter table variant drop foreign key FK68g66aoa9p0rvti6titgjpkpq
2024-10-28 00:52:55 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK3kf3tbt2jmd6gbfgh55c0hwv2
2024-10-28 00:52:55 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK33q8q6ex324k4mhc5hinwarnx
2024-10-28 00:52:55 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists car
2024-10-28 00:52:55 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists feature
2024-10-28 00:52:55 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant
2024-10-28 00:52:55 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant_feature
2024-10-28 00:52:55 [restartedMain] DEBUG org.hibernate.SQL - create table car (id bigint not null auto_increment, brand varchar(255), model varchar(255), thumbnail_url varchar(255), primary key (id)) engine=InnoDB
2024-10-28 00:52:55 [restartedMain] DEBUG org.hibernate.SQL - create table feature (id bigint not null auto_increment, name varchar(255) not null, primary key (id)) engine=InnoDB
2024-10-28 00:52:55 [restartedMain] DEBUG org.hibernate.SQL - create table variant (fuel_type tinyint check (fuel_type between 0 and 3), transmission_type tinyint check (transmission_type between 0 and 1), year_of_manufacture integer, car_id bigint, id bigint not null auto_increment, price bigint, name varchar(255) not null, related_cars json, primary key (id)) engine=InnoDB
2024-10-28 00:52:55 [restartedMain] DEBUG org.hibernate.SQL - create table variant_feature (car_id bigint, feature_id bigint, id bigint not null auto_increment, variant_id bigint, value varchar(255), primary key (id)) engine=InnoDB
2024-10-28 00:52:55 [restartedMain] DEBUG org.hibernate.SQL - alter table car add constraint UK1bh6mrchex5vsyjfvht8u4dhu unique (brand, model)
2024-10-28 00:52:55 [restartedMain] DEBUG org.hibernate.SQL - alter table feature add constraint UKjhueeftkn8ve8th8m8a2878dr unique (name)
2024-10-28 00:52:55 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint UKpq7n803hfxn02sey0e8fowmj5 unique (name)
2024-10-28 00:52:55 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint FK68g66aoa9p0rvti6titgjpkpq foreign key (car_id) references car (id)
2024-10-28 00:52:55 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK3kf3tbt2jmd6gbfgh55c0hwv2 foreign key (feature_id) references feature (id)
2024-10-28 00:52:55 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK33q8q6ex324k4mhc5hinwarnx foreign key (variant_id) references variant (id)
2024-10-28 00:52:56 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 00:52:56 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 00:52:57 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-10-28 00:52:57 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-28 00:52:57 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-28 00:52:57 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Started CarsearchApplication in 36.279 seconds (process running for 36.892)
2024-10-28 00:53:22 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-28 00:53:22 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-28 00:53:22 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:53:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:53:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:53:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:53:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:53:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:53:23 [http-nio-8080-exec-2] INFO  c.c.c.s.impl.FeatureServiceImpl - Successfully saved Features
2024-10-28 00:53:26 [http-nio-8080-exec-4] DEBUG c.c.c.service.impl.CarServiceImpl - Starting addCar process for CarDto: [CarDto(id=null, brand=Honda, model=City, thumbnailUrl=https://example.com/images/honda_city.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1500000, name=City ZX CVT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=8-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Cruise Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1300000, name=City V MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1600000, name=City ZX Diesel CVT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1400000, name=City V Diesel MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1550000, name=City VX CVT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=8-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Power Folding Mirrors), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Ambient Lighting), VariantFeatureDto(id=null, variantId=null, featureId=12, featureName=null, value=Wireless Charger)])]), CarDto(id=null, brand=Honda, model=Amaze, thumbnailUrl=https://example.com/images/honda_amaze.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=950000, name=Amaze VX CVT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=870000, name=Amaze S Diesel MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1000000, name=Amaze ZX CVT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Auto Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=8-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Rear Camera)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=820000, name=Amaze V MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=920000, name=Amaze S CVT Diesel, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=LED Headlamps)])]), CarDto(id=null, brand=Hyundai, model=i20, thumbnailUrl=https://example.com/images/hyundai_i20.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1100000, name=i20 Asta (O) AT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Rear Wiper)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=900000, name=i20 Sportz MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=950000, name=i20 Magna AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Touchscreen Display)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1000000, name=i20 Asta MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1150000, name=i20 N Line, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Wiper), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera)])]), CarDto(id=null, brand=Hyundai, model=Venue, thumbnailUrl=https://example.com/images/hyundai_venue.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1300000, name=Venue SX (O) AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Automatic Headlamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=900000, name=Venue S Diesel MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Defogger), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1250000, name=Venue SX AT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=LED DRLs), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=850000, name=Venue E MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1350000, name=Venue SX Plus Diesel AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rear Defogger)])]), CarDto(id=null, brand=Tata, model=Nexon, thumbnailUrl=https://example.com/images/tata_nexon.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1400000, name=Nexon XZ+ AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Hill Start Assist), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Rear AC Vents)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1050000, name=Nexon XM MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Touchscreen Infotainment)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1150000, name=Nexon XMA AMT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Power Folding Mirrors), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Reverse Camera)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1000000, name=Nexon XE MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Manual AC), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1500000, name=Nexon XZ+ Dual Tone, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Hill Start Assist), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rain-Sensing Wipers)])]), CarDto(id=null, brand=Tata, model=Harrier, thumbnailUrl=https://example.com/images/tata_harrier.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2200000, name=Harrier XZA+ AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Electronic Stability Program)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1900000, name=Harrier XT Plus MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=8-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2250000, name=Harrier Dark Edition AT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Dark Interior Theme), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Hill Descent Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rain-Sensing Wipers), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Push Start Button)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1700000, name=Harrier XE MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Steering)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2400000, name=Harrier Kaziranga Edition, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Electronic Stability Program), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Hill Hold Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Push Start Button)])]), CarDto(id=null, brand=Mahindra, model=XUV700, thumbnailUrl=https://example.com/images/mahindra_xuv700.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2400000, name=XUV700 AX7 L AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=7 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Dual-Zone Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Blind Spot Monitoring)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=2000000, name=XUV700 AX5 MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Power Folding Mirrors)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=2250000, name=XUV700 AX7 AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rain-Sensing Wipers), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Hill Hold Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1800000, name=XUV700 MX MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=LED DRLs), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Touchscreen Infotainment)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2600000, name=XUV700 AX7 AWD AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=All-Wheel Drive), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=7 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Hill Descent Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Blind Spot Monitoring), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rain-Sensing Wipers)])]), CarDto(id=null, brand=Mahindra, model=Thar, thumbnailUrl=https://example.com/images/mahindra_thar.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1700000, name=Thar LX 4x4 AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1500000, name=Thar AX Opt MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Steering)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1600000, name=Thar LX 4x2 AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x2 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1400000, name=Thar AX MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x2 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1750000, name=Thar LX Hard Top AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control)])]), CarDto(id=null, brand=Maruti Suzuki, model=Baleno, thumbnailUrl=https://example.com/images/maruti_baleno.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=970000, name=Baleno Alpha CVT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Alloy Wheels)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=850000, name=Baleno Zeta MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=920000, name=Baleno Delta AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Alloy Wheels)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=750000, name=Baleno Sigma MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Manual AC), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1030000, name=Baleno Alpha AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Rear AC Vents)])]), CarDto(id=null, brand=Maruti Suzuki, model=Swift, thumbnailUrl=https://example.com/images/maruti_swift.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=850000, name=Swift ZXI+ AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=720000, name=Swift VXI MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Manual AC)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=790000, name=Swift VXI AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Reverse Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=650000, name=Swift LXI MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=900000, name=Swift ZXI+ Dual Tone, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Headlamps)])])]
2024-10-28 00:53:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG c.c.c.service.impl.CarServiceImpl - Mapped CarDto to Car entity: [com.carwiki.carsearch.model.Car@45f1411a, com.carwiki.carsearch.model.Car@1fc26b7d, com.carwiki.carsearch.model.Car@1c115e31, com.carwiki.carsearch.model.Car@65c552c5, com.carwiki.carsearch.model.Car@2a7336f6, com.carwiki.carsearch.model.Car@26662946, com.carwiki.carsearch.model.Car@30900b6d, com.carwiki.carsearch.model.Car@7f8c34c0, com.carwiki.carsearch.model.Car@4cfb6941, com.carwiki.carsearch.model.Car@5b405581]
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0
2024-10-28 00:53:28 [http-nio-8080-exec-4] INFO  c.c.c.service.impl.CarServiceImpl - Successfully saved Cars
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select v1_0.car_id,v1_0.id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.car_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 00:53:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 00:56:17 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-10-28 00:56:17 [Thread-21] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2024-10-28 00:56:17 [Thread-21] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 00:56:17 [Thread-21] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-10-28 00:56:17 [Thread-21] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-10-28 00:56:17 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Starting CarsearchApplication using Java 21.0.5 with PID 12676 (C:\carwiki\carwiki\target\classes started by dumes in C:\carwiki\carwiki)
2024-10-28 00:56:17 [restartedMain] DEBUG c.c.carsearch.CarsearchApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 00:56:17 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 00:56:17 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\carwiki\carwiki\compose.yaml'
2024-10-28 00:56:19 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - There are already Docker Compose services running, skipping startup
2024-10-28 00:56:19 [restartedMain] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: No host port mapping found for container port 6379
	at org.springframework.util.Assert.state(Assert.java:76)
	at org.springframework.boot.docker.compose.core.DefaultConnectionPorts.get(DefaultConnectionPorts.java:100)
	at org.springframework.boot.docker.compose.service.connection.redis.RedisDockerComposeConnectionDetailsFactory$RedisDockerComposeConnectionDetails.<init>(RedisDockerComposeConnectionDetailsFactory.java:58)
	at org.springframework.boot.docker.compose.service.connection.redis.RedisDockerComposeConnectionDetailsFactory.getDockerComposeConnectionDetails(RedisDockerComposeConnectionDetailsFactory.java:45)
	at org.springframework.boot.docker.compose.service.connection.redis.RedisDockerComposeConnectionDetailsFactory.getDockerComposeConnectionDetails(RedisDockerComposeConnectionDetailsFactory.java:33)
	at org.springframework.boot.docker.compose.service.connection.DockerComposeConnectionDetailsFactory.getConnectionDetails(DockerComposeConnectionDetailsFactory.java:80)
	at org.springframework.boot.docker.compose.service.connection.DockerComposeConnectionDetailsFactory.getConnectionDetails(DockerComposeConnectionDetailsFactory.java:41)
	at org.springframework.boot.autoconfigure.service.connection.ConnectionDetailsFactories.getConnectionDetails(ConnectionDetailsFactories.java:80)
	at org.springframework.boot.docker.compose.service.connection.DockerComposeServiceConnectionsApplicationListener.registerConnectionDetails(DockerComposeServiceConnectionsApplicationListener.java:68)
	at org.springframework.boot.docker.compose.service.connection.DockerComposeServiceConnectionsApplicationListener.onApplicationEvent(DockerComposeServiceConnectionsApplicationListener.java:61)
	at org.springframework.boot.docker.compose.service.connection.DockerComposeServiceConnectionsApplicationListener.onApplicationEvent(DockerComposeServiceConnectionsApplicationListener.java:44)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138)
	at org.springframework.boot.docker.compose.lifecycle.DockerComposeLifecycleManager.publishEvent(DockerComposeLifecycleManager.java:171)
	at org.springframework.boot.docker.compose.lifecycle.DockerComposeLifecycleManager.start(DockerComposeLifecycleManager.java:143)
	at org.springframework.boot.docker.compose.lifecycle.DockerComposeListener.onApplicationEvent(DockerComposeListener.java:53)
	at org.springframework.boot.docker.compose.lifecycle.DockerComposeListener.onApplicationEvent(DockerComposeListener.java:35)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:185)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:178)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:156)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138)
	at org.springframework.boot.context.event.EventPublishingRunListener.multicastInitialEvent(EventPublishingRunListener.java:136)
	at org.springframework.boot.context.event.EventPublishingRunListener.contextLoaded(EventPublishingRunListener.java:98)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$contextLoaded$4(SpringApplicationRunListeners.java:72)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:118)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.contextLoaded(SpringApplicationRunListeners.java:72)
	at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:433)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.carwiki.carsearch.CarsearchApplication.main(CarsearchApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2024-10-28 00:56:38 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Starting CarsearchApplication using Java 21.0.5 with PID 14044 (C:\carwiki\carwiki\target\classes started by dumes in C:\carwiki\carwiki)
2024-10-28 00:56:38 [restartedMain] DEBUG c.c.carsearch.CarsearchApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 00:56:38 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 00:56:38 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-10-28 00:56:38 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-10-28 00:56:38 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\carwiki\carwiki\compose.yaml'
2024-10-28 00:56:39 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Created
2024-10-28 00:56:39 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Created
2024-10-28 00:56:39 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Created
2024-10-28 00:56:39 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Starting
2024-10-28 00:56:39 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Starting
2024-10-28 00:56:39 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Starting
2024-10-28 00:56:40 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Started
2024-10-28 00:56:40 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Started
2024-10-28 00:56:40 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Started
2024-10-28 00:56:40 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Waiting
2024-10-28 00:56:40 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Waiting
2024-10-28 00:56:40 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Waiting
2024-10-28 00:56:40 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Healthy
2024-10-28 00:56:40 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Healthy
2024-10-28 00:56:40 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Healthy
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39 ms. Found 0 Elasticsearch repository interfaces.
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 123 ms. Found 4 JPA repository interfaces.
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 00:57:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-10-28 00:57:06 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-28 00:57:06 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-28 00:57:06 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 00:57:06 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 00:57:06 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 00:57:06 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2640 ms
2024-10-28 00:57:06 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 00:57:06 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 00:57:07 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 00:57:07 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-10-28 00:57:07 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 00:57:07 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4351c273
2024-10-28 00:57:07 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 00:57:08 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-10-28 00:57:09 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 00:57:09 [restartedMain] DEBUG org.hibernate.SQL - alter table variant drop foreign key FK68g66aoa9p0rvti6titgjpkpq
2024-10-28 00:57:09 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK3kf3tbt2jmd6gbfgh55c0hwv2
2024-10-28 00:57:09 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK33q8q6ex324k4mhc5hinwarnx
2024-10-28 00:57:09 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists car
2024-10-28 00:57:09 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists feature
2024-10-28 00:57:09 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant
2024-10-28 00:57:09 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant_feature
2024-10-28 00:57:09 [restartedMain] DEBUG org.hibernate.SQL - create table car (id bigint not null auto_increment, brand varchar(255), model varchar(255), thumbnail_url varchar(255), primary key (id)) engine=InnoDB
2024-10-28 00:57:09 [restartedMain] DEBUG org.hibernate.SQL - create table feature (id bigint not null auto_increment, name varchar(255) not null, primary key (id)) engine=InnoDB
2024-10-28 00:57:09 [restartedMain] DEBUG org.hibernate.SQL - create table variant (fuel_type tinyint check (fuel_type between 0 and 3), transmission_type tinyint check (transmission_type between 0 and 1), year_of_manufacture integer, car_id bigint, id bigint not null auto_increment, price bigint, name varchar(255) not null, related_cars json, primary key (id)) engine=InnoDB
2024-10-28 00:57:09 [restartedMain] DEBUG org.hibernate.SQL - create table variant_feature (car_id bigint, feature_id bigint, id bigint not null auto_increment, variant_id bigint, value varchar(255), primary key (id)) engine=InnoDB
2024-10-28 00:57:09 [restartedMain] DEBUG org.hibernate.SQL - alter table car add constraint UK1bh6mrchex5vsyjfvht8u4dhu unique (brand, model)
2024-10-28 00:57:09 [restartedMain] DEBUG org.hibernate.SQL - alter table feature add constraint UKjhueeftkn8ve8th8m8a2878dr unique (name)
2024-10-28 00:57:09 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint UKpq7n803hfxn02sey0e8fowmj5 unique (name)
2024-10-28 00:57:09 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint FK68g66aoa9p0rvti6titgjpkpq foreign key (car_id) references car (id)
2024-10-28 00:57:09 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK3kf3tbt2jmd6gbfgh55c0hwv2 foreign key (feature_id) references feature (id)
2024-10-28 00:57:09 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK33q8q6ex324k4mhc5hinwarnx foreign key (variant_id) references variant (id)
2024-10-28 00:57:09 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 00:57:10 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 00:57:11 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-10-28 00:57:11 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-28 00:57:11 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-28 00:57:11 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Started CarsearchApplication in 33.836 seconds (process running for 34.628)
2024-10-28 00:57:25 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-28 00:57:25 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-28 00:57:25 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 00:57:25 [http-nio-8080-exec-2] INFO  c.c.c.s.impl.FeatureServiceImpl - Successfully saved Features
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG c.c.c.service.impl.CarServiceImpl - Starting addCar process for CarDto: [CarDto(id=null, brand=Honda, model=City, thumbnailUrl=https://example.com/images/honda_city.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1500000, name=City ZX CVT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=8-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Cruise Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1300000, name=City V MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1600000, name=City ZX Diesel CVT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1400000, name=City V Diesel MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1550000, name=City VX CVT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=8-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Power Folding Mirrors), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Ambient Lighting), VariantFeatureDto(id=null, variantId=null, featureId=12, featureName=null, value=Wireless Charger)])]), CarDto(id=null, brand=Honda, model=Amaze, thumbnailUrl=https://example.com/images/honda_amaze.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=950000, name=Amaze VX CVT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=870000, name=Amaze S Diesel MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1000000, name=Amaze ZX CVT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Auto Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=8-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Rear Camera)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=820000, name=Amaze V MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=920000, name=Amaze S CVT Diesel, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=LED Headlamps)])]), CarDto(id=null, brand=Hyundai, model=i20, thumbnailUrl=https://example.com/images/hyundai_i20.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1100000, name=i20 Asta (O) AT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Rear Wiper)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=900000, name=i20 Sportz MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=950000, name=i20 Magna AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Touchscreen Display)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1000000, name=i20 Asta MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1150000, name=i20 N Line, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Wiper), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera)])]), CarDto(id=null, brand=Hyundai, model=Venue, thumbnailUrl=https://example.com/images/hyundai_venue.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1300000, name=Venue SX (O) AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Automatic Headlamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=900000, name=Venue S Diesel MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Defogger), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1250000, name=Venue SX AT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=LED DRLs), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=850000, name=Venue E MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1350000, name=Venue SX Plus Diesel AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rear Defogger)])]), CarDto(id=null, brand=Tata, model=Nexon, thumbnailUrl=https://example.com/images/tata_nexon.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1400000, name=Nexon XZ+ AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Hill Start Assist), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Rear AC Vents)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1050000, name=Nexon XM MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Touchscreen Infotainment)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1150000, name=Nexon XMA AMT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Power Folding Mirrors), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Reverse Camera)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1000000, name=Nexon XE MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Manual AC), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1500000, name=Nexon XZ+ Dual Tone, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Hill Start Assist), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rain-Sensing Wipers)])]), CarDto(id=null, brand=Tata, model=Harrier, thumbnailUrl=https://example.com/images/tata_harrier.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2200000, name=Harrier XZA+ AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Electronic Stability Program)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1900000, name=Harrier XT Plus MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=8-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2250000, name=Harrier Dark Edition AT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Dark Interior Theme), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Hill Descent Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rain-Sensing Wipers), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Push Start Button)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1700000, name=Harrier XE MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Steering)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2400000, name=Harrier Kaziranga Edition, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Electronic Stability Program), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Hill Hold Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Push Start Button)])]), CarDto(id=null, brand=Mahindra, model=XUV700, thumbnailUrl=https://example.com/images/mahindra_xuv700.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2400000, name=XUV700 AX7 L AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=7 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Dual-Zone Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Blind Spot Monitoring)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=2000000, name=XUV700 AX5 MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Power Folding Mirrors)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=2250000, name=XUV700 AX7 AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rain-Sensing Wipers), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Hill Hold Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1800000, name=XUV700 MX MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=LED DRLs), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Touchscreen Infotainment)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2600000, name=XUV700 AX7 AWD AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=All-Wheel Drive), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=7 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Hill Descent Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Blind Spot Monitoring), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rain-Sensing Wipers)])]), CarDto(id=null, brand=Mahindra, model=Thar, thumbnailUrl=https://example.com/images/mahindra_thar.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1700000, name=Thar LX 4x4 AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1500000, name=Thar AX Opt MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Steering)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1600000, name=Thar LX 4x2 AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x2 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1400000, name=Thar AX MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x2 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1750000, name=Thar LX Hard Top AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control)])]), CarDto(id=null, brand=Maruti Suzuki, model=Baleno, thumbnailUrl=https://example.com/images/maruti_baleno.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=970000, name=Baleno Alpha CVT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Alloy Wheels)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=850000, name=Baleno Zeta MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=920000, name=Baleno Delta AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Alloy Wheels)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=750000, name=Baleno Sigma MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Manual AC), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1030000, name=Baleno Alpha AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Rear AC Vents)])]), CarDto(id=null, brand=Maruti Suzuki, model=Swift, thumbnailUrl=https://example.com/images/maruti_swift.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=850000, name=Swift ZXI+ AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=720000, name=Swift VXI MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Manual AC)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=790000, name=Swift VXI AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Reverse Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=650000, name=Swift LXI MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=900000, name=Swift ZXI+ Dual Tone, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Headlamps)])])]
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG c.c.c.service.impl.CarServiceImpl - Mapped CarDto to Car entity: [com.carwiki.carsearch.model.Car@16153c97, com.carwiki.carsearch.model.Car@196e3b1e, com.carwiki.carsearch.model.Car@990b35e, com.carwiki.carsearch.model.Car@70769398, com.carwiki.carsearch.model.Car@4fb8f885, com.carwiki.carsearch.model.Car@27669ca7, com.carwiki.carsearch.model.Car@2be0c156, com.carwiki.carsearch.model.Car@6f4e7de1, com.carwiki.carsearch.model.Car@673adc5d, com.carwiki.carsearch.model.Car@742af7b9]
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:31 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0
2024-10-28 00:57:32 [http-nio-8080-exec-3] INFO  c.c.c.service.impl.CarServiceImpl - Successfully saved Cars
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 00:59:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0
2024-10-28 01:03:43 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 6 class path changes (0 additions, 0 deletions, 6 modifications)
2024-10-28 01:03:43 [Thread-21] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2024-10-28 01:03:43 [Thread-21] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 01:03:43 [Thread-21] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-10-28 01:03:43 [Thread-21] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-10-28 01:03:43 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Starting CarsearchApplication using Java 21.0.5 with PID 14044 (C:\carwiki\carwiki\target\classes started by dumes in C:\carwiki\carwiki)
2024-10-28 01:03:43 [restartedMain] DEBUG c.c.carsearch.CarsearchApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 01:03:43 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 01:03:43 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\carwiki\carwiki\compose.yaml'
2024-10-28 01:03:44 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - There are already Docker Compose services running, skipping startup
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 17 ms. Found 0 Elasticsearch repository interfaces.
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 4 JPA repository interfaces.
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:03:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-10-28 01:03:44 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-28 01:03:44 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-28 01:03:44 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 01:03:44 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 01:03:44 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 01:03:44 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 448 ms
2024-10-28 01:03:44 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 01:03:44 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 01:03:44 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-10-28 01:03:44 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2024-10-28 01:03:45 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5dcf2595
2024-10-28 01:03:45 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2024-10-28 01:03:45 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-10-28 01:03:45 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 01:03:45 [restartedMain] DEBUG org.hibernate.SQL - alter table variant drop foreign key FK68g66aoa9p0rvti6titgjpkpq
2024-10-28 01:03:45 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK3kf3tbt2jmd6gbfgh55c0hwv2
2024-10-28 01:03:45 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK33q8q6ex324k4mhc5hinwarnx
2024-10-28 01:03:45 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists car
2024-10-28 01:03:45 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists feature
2024-10-28 01:03:45 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant
2024-10-28 01:03:45 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant_feature
2024-10-28 01:03:45 [restartedMain] DEBUG org.hibernate.SQL - create table car (id bigint not null auto_increment, brand varchar(255), model varchar(255), thumbnail_url varchar(255), primary key (id)) engine=InnoDB
2024-10-28 01:03:45 [restartedMain] DEBUG org.hibernate.SQL - create table feature (id bigint not null auto_increment, name varchar(255) not null, primary key (id)) engine=InnoDB
2024-10-28 01:03:45 [restartedMain] DEBUG org.hibernate.SQL - create table variant (fuel_type tinyint check (fuel_type between 0 and 3), transmission_type tinyint check (transmission_type between 0 and 1), year_of_manufacture integer, car_id bigint, id bigint not null auto_increment, price bigint, name varchar(255) not null, related_cars json, primary key (id)) engine=InnoDB
2024-10-28 01:03:45 [restartedMain] DEBUG org.hibernate.SQL - create table variant_feature (car_id bigint, feature_id bigint, id bigint not null auto_increment, variant_id bigint, value varchar(255), primary key (id)) engine=InnoDB
2024-10-28 01:03:45 [restartedMain] DEBUG org.hibernate.SQL - alter table car add constraint UK1bh6mrchex5vsyjfvht8u4dhu unique (brand, model)
2024-10-28 01:03:45 [restartedMain] DEBUG org.hibernate.SQL - alter table feature add constraint UKjhueeftkn8ve8th8m8a2878dr unique (name)
2024-10-28 01:03:45 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint UKpq7n803hfxn02sey0e8fowmj5 unique (name)
2024-10-28 01:03:45 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint FK68g66aoa9p0rvti6titgjpkpq foreign key (car_id) references car (id)
2024-10-28 01:03:45 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK3kf3tbt2jmd6gbfgh55c0hwv2 foreign key (feature_id) references feature (id)
2024-10-28 01:03:45 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK33q8q6ex324k4mhc5hinwarnx foreign key (variant_id) references variant (id)
2024-10-28 01:03:45 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 01:03:45 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 01:03:45 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-10-28 01:03:45 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-28 01:03:45 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-28 01:03:45 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Started CarsearchApplication in 2.489 seconds (process running for 429.378)
2024-10-28 01:03:45 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2024-10-28 01:04:07 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-28 01:04:07 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-28 01:04:07 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:04:07 [http-nio-8080-exec-2] INFO  c.c.c.s.impl.FeatureServiceImpl - Successfully saved Features
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG c.c.c.service.impl.CarServiceImpl - Starting addCar process for CarDto: [CarDto(id=null, brand=Honda, model=City, thumbnailUrl=https://example.com/images/honda_city.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1500000, name=City ZX CVT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=8-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Cruise Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1300000, name=City V MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1600000, name=City ZX Diesel CVT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1400000, name=City V Diesel MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1550000, name=City VX CVT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=8-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Power Folding Mirrors), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Ambient Lighting), VariantFeatureDto(id=null, variantId=null, featureId=12, featureName=null, value=Wireless Charger)])]), CarDto(id=null, brand=Honda, model=Amaze, thumbnailUrl=https://example.com/images/honda_amaze.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=950000, name=Amaze VX CVT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=870000, name=Amaze S Diesel MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1000000, name=Amaze ZX CVT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Auto Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=8-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Rear Camera)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=820000, name=Amaze V MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=920000, name=Amaze S CVT Diesel, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=LED Headlamps)])]), CarDto(id=null, brand=Hyundai, model=i20, thumbnailUrl=https://example.com/images/hyundai_i20.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1100000, name=i20 Asta (O) AT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Rear Wiper)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=900000, name=i20 Sportz MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=950000, name=i20 Magna AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Touchscreen Display)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1000000, name=i20 Asta MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1150000, name=i20 N Line, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Wiper), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera)])]), CarDto(id=null, brand=Hyundai, model=Venue, thumbnailUrl=https://example.com/images/hyundai_venue.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1300000, name=Venue SX (O) AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Automatic Headlamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=900000, name=Venue S Diesel MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Defogger), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1250000, name=Venue SX AT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=LED DRLs), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=850000, name=Venue E MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1350000, name=Venue SX Plus Diesel AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rear Defogger)])]), CarDto(id=null, brand=Tata, model=Nexon, thumbnailUrl=https://example.com/images/tata_nexon.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1400000, name=Nexon XZ+ AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Hill Start Assist), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Rear AC Vents)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1050000, name=Nexon XM MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Touchscreen Infotainment)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1150000, name=Nexon XMA AMT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Power Folding Mirrors), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Reverse Camera)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1000000, name=Nexon XE MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Manual AC), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1500000, name=Nexon XZ+ Dual Tone, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Hill Start Assist), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rain-Sensing Wipers)])]), CarDto(id=null, brand=Tata, model=Harrier, thumbnailUrl=https://example.com/images/tata_harrier.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2200000, name=Harrier XZA+ AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Electronic Stability Program)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1900000, name=Harrier XT Plus MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=8-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2250000, name=Harrier Dark Edition AT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Dark Interior Theme), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Hill Descent Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rain-Sensing Wipers), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Push Start Button)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1700000, name=Harrier XE MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Steering)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2400000, name=Harrier Kaziranga Edition, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Electronic Stability Program), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Hill Hold Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Push Start Button)])]), CarDto(id=null, brand=Mahindra, model=XUV700, thumbnailUrl=https://example.com/images/mahindra_xuv700.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2400000, name=XUV700 AX7 L AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=7 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Dual-Zone Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Blind Spot Monitoring)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=2000000, name=XUV700 AX5 MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Power Folding Mirrors)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=2250000, name=XUV700 AX7 AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rain-Sensing Wipers), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Hill Hold Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1800000, name=XUV700 MX MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=LED DRLs), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Touchscreen Infotainment)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2600000, name=XUV700 AX7 AWD AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=All-Wheel Drive), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=7 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Hill Descent Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Blind Spot Monitoring), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rain-Sensing Wipers)])]), CarDto(id=null, brand=Mahindra, model=Thar, thumbnailUrl=https://example.com/images/mahindra_thar.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1700000, name=Thar LX 4x4 AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1500000, name=Thar AX Opt MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Steering)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1600000, name=Thar LX 4x2 AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x2 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1400000, name=Thar AX MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x2 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1750000, name=Thar LX Hard Top AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control)])]), CarDto(id=null, brand=Maruti Suzuki, model=Baleno, thumbnailUrl=https://example.com/images/maruti_baleno.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=970000, name=Baleno Alpha CVT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Alloy Wheels)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=850000, name=Baleno Zeta MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=920000, name=Baleno Delta AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Alloy Wheels)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=750000, name=Baleno Sigma MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Manual AC), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1030000, name=Baleno Alpha AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Rear AC Vents)])]), CarDto(id=null, brand=Maruti Suzuki, model=Swift, thumbnailUrl=https://example.com/images/maruti_swift.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=850000, name=Swift ZXI+ AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=720000, name=Swift VXI MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Manual AC)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=790000, name=Swift VXI AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Reverse Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=650000, name=Swift LXI MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=900000, name=Swift ZXI+ Dual Tone, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Headlamps)])])]
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG c.c.c.service.impl.CarServiceImpl - Mapped CarDto to Car entity: [com.carwiki.carsearch.model.Car@226f26f5, com.carwiki.carsearch.model.Car@16e072a1, com.carwiki.carsearch.model.Car@356945bd, com.carwiki.carsearch.model.Car@34cd243c, com.carwiki.carsearch.model.Car@6f4ee4de, com.carwiki.carsearch.model.Car@7a2ee6ec, com.carwiki.carsearch.model.Car@59500b9, com.carwiki.carsearch.model.Car@58a438f3, com.carwiki.carsearch.model.Car@40d44f2d, com.carwiki.carsearch.model.Car@4dc0d85d]
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0
2024-10-28 01:04:12 [http-nio-8080-exec-3] INFO  c.c.c.service.impl.CarServiceImpl - Successfully saved Cars
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.car_id,v1_0.id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.car_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:04:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 01:05:11 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-10-28 01:05:11 [Thread-23] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2024-10-28 01:05:11 [Thread-23] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 01:05:11 [Thread-23] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2024-10-28 01:05:11 [Thread-23] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2024-10-28 01:05:11 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Starting CarsearchApplication using Java 21.0.5 with PID 14044 (C:\carwiki\carwiki\target\classes started by dumes in C:\carwiki\carwiki)
2024-10-28 01:05:11 [restartedMain] DEBUG c.c.carsearch.CarsearchApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 01:05:11 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 01:05:11 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\carwiki\carwiki\compose.yaml'
2024-10-28 01:05:12 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - There are already Docker Compose services running, skipping startup
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Elasticsearch repository interfaces.
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 4 JPA repository interfaces.
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:05:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2024-10-28 01:05:12 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-28 01:05:12 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-28 01:05:12 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 01:05:12 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 01:05:12 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 01:05:12 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 323 ms
2024-10-28 01:05:12 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 01:05:12 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 01:05:12 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-10-28 01:05:12 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2024-10-28 01:05:12 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@970d8c8
2024-10-28 01:05:12 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2024-10-28 01:05:12 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-10-28 01:05:12 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 01:05:12 [restartedMain] DEBUG org.hibernate.SQL - alter table variant drop foreign key FK68g66aoa9p0rvti6titgjpkpq
2024-10-28 01:05:12 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK3kf3tbt2jmd6gbfgh55c0hwv2
2024-10-28 01:05:12 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK33q8q6ex324k4mhc5hinwarnx
2024-10-28 01:05:12 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists car
2024-10-28 01:05:13 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists feature
2024-10-28 01:05:13 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant
2024-10-28 01:05:13 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant_feature
2024-10-28 01:05:13 [restartedMain] DEBUG org.hibernate.SQL - create table car (id bigint not null auto_increment, brand varchar(255), model varchar(255), thumbnail_url varchar(255), primary key (id)) engine=InnoDB
2024-10-28 01:05:13 [restartedMain] DEBUG org.hibernate.SQL - create table feature (id bigint not null auto_increment, name varchar(255) not null, primary key (id)) engine=InnoDB
2024-10-28 01:05:13 [restartedMain] DEBUG org.hibernate.SQL - create table variant (fuel_type tinyint check (fuel_type between 0 and 3), transmission_type tinyint check (transmission_type between 0 and 1), year_of_manufacture integer, car_id bigint, id bigint not null auto_increment, price bigint, name varchar(255) not null, related_cars json, primary key (id)) engine=InnoDB
2024-10-28 01:05:13 [restartedMain] DEBUG org.hibernate.SQL - create table variant_feature (car_id bigint, feature_id bigint, id bigint not null auto_increment, variant_id bigint, value varchar(255), primary key (id)) engine=InnoDB
2024-10-28 01:05:13 [restartedMain] DEBUG org.hibernate.SQL - alter table car add constraint UK1bh6mrchex5vsyjfvht8u4dhu unique (brand, model)
2024-10-28 01:05:13 [restartedMain] DEBUG org.hibernate.SQL - alter table feature add constraint UKjhueeftkn8ve8th8m8a2878dr unique (name)
2024-10-28 01:05:13 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint UKpq7n803hfxn02sey0e8fowmj5 unique (name)
2024-10-28 01:05:13 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint FK68g66aoa9p0rvti6titgjpkpq foreign key (car_id) references car (id)
2024-10-28 01:05:13 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK3kf3tbt2jmd6gbfgh55c0hwv2 foreign key (feature_id) references feature (id)
2024-10-28 01:05:13 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK33q8q6ex324k4mhc5hinwarnx foreign key (variant_id) references variant (id)
2024-10-28 01:05:13 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 01:05:13 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 01:05:13 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-10-28 01:05:13 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-28 01:05:13 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-28 01:05:13 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Started CarsearchApplication in 1.998 seconds (process running for 517.069)
2024-10-28 01:05:13 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2024-10-28 01:05:15 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 01:05:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2024-10-28 01:05:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2024-10-28 01:06:28 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Starting CarsearchApplication using Java 21.0.5 with PID 33412 (C:\carwiki\carwiki\target\classes started by dumes in C:\carwiki\carwiki)
2024-10-28 01:06:28 [restartedMain] DEBUG c.c.carsearch.CarsearchApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 01:06:28 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 01:06:28 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-10-28 01:06:28 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-10-28 01:06:28 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\carwiki\carwiki\compose.yaml'
2024-10-28 01:06:32 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Created
2024-10-28 01:06:32 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Created
2024-10-28 01:06:32 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Created
2024-10-28 01:06:32 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Starting
2024-10-28 01:06:32 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Starting
2024-10-28 01:06:32 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Starting
2024-10-28 01:06:35 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Started
2024-10-28 01:06:35 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Started
2024-10-28 01:06:35 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Started
2024-10-28 01:06:35 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Waiting
2024-10-28 01:06:35 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Waiting
2024-10-28 01:06:35 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Waiting
2024-10-28 01:06:35 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Healthy
2024-10-28 01:06:35 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Healthy
2024-10-28 01:06:35 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Healthy
2024-10-28 01:07:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:07:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-10-28 01:07:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:07:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:07:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:07:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:07:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 309 ms. Found 0 Elasticsearch repository interfaces.
2024-10-28 01:07:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:07:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-10-28 01:07:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:07:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:07:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:07:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:07:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 80 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-10-28 01:07:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:07:09 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-10-28 01:07:10 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1361 ms. Found 4 JPA repository interfaces.
2024-10-28 01:07:11 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:07:11 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-10-28 01:07:11 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:07:11 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:07:11 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:07:11 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:07:11 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 92 ms. Found 0 Redis repository interfaces.
2024-10-28 01:07:17 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-28 01:07:18 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-28 01:07:18 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 01:07:18 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 01:07:18 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 01:07:18 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 23241 ms
2024-10-28 01:07:21 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 01:07:22 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 01:07:22 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 01:07:26 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-10-28 01:07:26 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 01:07:29 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1a19f25b
2024-10-28 01:07:29 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 01:07:30 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-10-28 01:07:37 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 01:07:38 [restartedMain] DEBUG org.hibernate.SQL - alter table variant drop foreign key FK68g66aoa9p0rvti6titgjpkpq
2024-10-28 01:07:38 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK3kf3tbt2jmd6gbfgh55c0hwv2
2024-10-28 01:07:38 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK33q8q6ex324k4mhc5hinwarnx
2024-10-28 01:07:38 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists car
2024-10-28 01:07:38 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists feature
2024-10-28 01:07:39 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant
2024-10-28 01:07:39 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant_feature
2024-10-28 01:07:39 [restartedMain] DEBUG org.hibernate.SQL - create table car (id bigint not null auto_increment, brand varchar(255), model varchar(255), thumbnail_url varchar(255), primary key (id)) engine=InnoDB
2024-10-28 01:07:39 [restartedMain] DEBUG org.hibernate.SQL - create table feature (id bigint not null auto_increment, name varchar(255) not null, primary key (id)) engine=InnoDB
2024-10-28 01:07:39 [restartedMain] DEBUG org.hibernate.SQL - create table variant (fuel_type tinyint check (fuel_type between 0 and 3), transmission_type tinyint check (transmission_type between 0 and 1), year_of_manufacture integer, car_id bigint, id bigint not null auto_increment, price bigint, name varchar(255) not null, related_cars json, primary key (id)) engine=InnoDB
2024-10-28 01:07:39 [restartedMain] DEBUG org.hibernate.SQL - create table variant_feature (car_id bigint, feature_id bigint, id bigint not null auto_increment, variant_id bigint, value varchar(255), primary key (id)) engine=InnoDB
2024-10-28 01:07:39 [restartedMain] DEBUG org.hibernate.SQL - alter table car add constraint UK1bh6mrchex5vsyjfvht8u4dhu unique (brand, model)
2024-10-28 01:07:39 [restartedMain] DEBUG org.hibernate.SQL - alter table feature add constraint UKjhueeftkn8ve8th8m8a2878dr unique (name)
2024-10-28 01:07:39 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint UKpq7n803hfxn02sey0e8fowmj5 unique (name)
2024-10-28 01:07:40 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint FK68g66aoa9p0rvti6titgjpkpq foreign key (car_id) references car (id)
2024-10-28 01:07:40 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK3kf3tbt2jmd6gbfgh55c0hwv2 foreign key (feature_id) references feature (id)
2024-10-28 01:07:40 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK33q8q6ex324k4mhc5hinwarnx foreign key (variant_id) references variant (id)
2024-10-28 01:07:41 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 01:07:43 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 01:07:49 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-10-28 01:07:49 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-28 01:07:49 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-28 01:07:49 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Started CarsearchApplication in 85.176 seconds (process running for 87.747)
2024-10-28 01:11:22 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)
2024-10-28 01:11:22 [Thread-21] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2024-10-28 01:11:22 [Thread-21] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 01:11:22 [Thread-21] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-10-28 01:11:22 [Thread-21] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-10-28 01:11:23 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Starting CarsearchApplication using Java 21.0.5 with PID 33412 (C:\carwiki\carwiki\target\classes started by dumes in C:\carwiki\carwiki)
2024-10-28 01:11:23 [restartedMain] DEBUG c.c.carsearch.CarsearchApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 01:11:23 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 01:11:23 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\carwiki\carwiki\compose.yaml'
2024-10-28 01:11:26 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - There are already Docker Compose services running, skipping startup
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 45 ms. Found 0 Elasticsearch repository interfaces.
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 65 ms. Found 4 JPA repository interfaces.
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:11:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 0 Redis repository interfaces.
2024-10-28 01:11:28 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-28 01:11:28 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-28 01:11:28 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 01:11:28 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 01:11:28 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 01:11:28 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2078 ms
2024-10-28 01:11:28 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 01:11:28 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 01:11:28 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-10-28 01:11:28 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2024-10-28 01:11:29 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@541494cd
2024-10-28 01:11:29 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2024-10-28 01:11:29 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-10-28 01:11:29 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 01:11:29 [restartedMain] DEBUG org.hibernate.SQL - alter table variant drop foreign key FK68g66aoa9p0rvti6titgjpkpq
2024-10-28 01:11:29 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK3kf3tbt2jmd6gbfgh55c0hwv2
2024-10-28 01:11:29 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK33q8q6ex324k4mhc5hinwarnx
2024-10-28 01:11:29 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists car
2024-10-28 01:11:30 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists feature
2024-10-28 01:11:30 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant
2024-10-28 01:11:30 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant_feature
2024-10-28 01:11:30 [restartedMain] DEBUG org.hibernate.SQL - create table car (id bigint not null auto_increment, brand varchar(255), model varchar(255), thumbnail_url varchar(255), primary key (id)) engine=InnoDB
2024-10-28 01:11:30 [restartedMain] DEBUG org.hibernate.SQL - create table feature (id bigint not null auto_increment, name varchar(255) not null, primary key (id)) engine=InnoDB
2024-10-28 01:11:30 [restartedMain] DEBUG org.hibernate.SQL - create table variant (fuel_type tinyint check (fuel_type between 0 and 3), transmission_type tinyint check (transmission_type between 0 and 1), year_of_manufacture integer, car_id bigint, id bigint not null auto_increment, price bigint, name varchar(255) not null, related_cars json, primary key (id)) engine=InnoDB
2024-10-28 01:11:30 [restartedMain] DEBUG org.hibernate.SQL - create table variant_feature (car_id bigint, feature_id bigint not null, id bigint not null auto_increment, variant_id bigint, value varchar(255), primary key (id)) engine=InnoDB
2024-10-28 01:11:30 [restartedMain] DEBUG org.hibernate.SQL - alter table car add constraint UK1bh6mrchex5vsyjfvht8u4dhu unique (brand, model)
2024-10-28 01:11:30 [restartedMain] DEBUG org.hibernate.SQL - alter table feature add constraint UKjhueeftkn8ve8th8m8a2878dr unique (name)
2024-10-28 01:11:30 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint UKpq7n803hfxn02sey0e8fowmj5 unique (name)
2024-10-28 01:11:30 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint FK68g66aoa9p0rvti6titgjpkpq foreign key (car_id) references car (id)
2024-10-28 01:11:31 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK3kf3tbt2jmd6gbfgh55c0hwv2 foreign key (feature_id) references feature (id)
2024-10-28 01:11:31 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK33q8q6ex324k4mhc5hinwarnx foreign key (variant_id) references variant (id)
2024-10-28 01:11:31 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 01:11:32 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 01:11:32 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-10-28 01:11:32 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-28 01:11:32 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-28 01:11:32 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Started CarsearchApplication in 9.811 seconds (process running for 310.966)
2024-10-28 01:11:32 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2024-10-28 01:12:17 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-10-28 01:12:17 [Thread-23] INFO  o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2024-10-28 01:12:17 [Thread-23] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 01:12:17 [Thread-23] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2024-10-28 01:12:17 [Thread-23] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2024-10-28 01:12:18 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Starting CarsearchApplication using Java 21.0.5 with PID 33412 (C:\carwiki\carwiki\target\classes started by dumes in C:\carwiki\carwiki)
2024-10-28 01:12:18 [restartedMain] DEBUG c.c.carsearch.CarsearchApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 01:12:18 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 01:12:18 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\carwiki\carwiki\compose.yaml'
2024-10-28 01:12:21 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - There are already Docker Compose services running, skipping startup
2024-10-28 01:12:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:12:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-10-28 01:12:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:12:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:12:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:12:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:12:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 32 ms. Found 0 Elasticsearch repository interfaces.
2024-10-28 01:12:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:12:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-10-28 01:12:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:12:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:12:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:12:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:12:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-10-28 01:12:22 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:12:22 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-10-28 01:12:22 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 4 JPA repository interfaces.
2024-10-28 01:12:22 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:12:22 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-10-28 01:12:22 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:12:22 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:12:22 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:12:22 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:12:22 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2024-10-28 01:12:22 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-28 01:12:22 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-28 01:12:22 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 01:12:22 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 01:12:22 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 01:12:22 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1430 ms
2024-10-28 01:12:22 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 01:12:22 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 01:12:22 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-10-28 01:12:22 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2024-10-28 01:12:22 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@33687481
2024-10-28 01:12:22 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2024-10-28 01:12:22 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-10-28 01:12:23 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 01:12:23 [restartedMain] DEBUG org.hibernate.SQL - alter table variant drop foreign key FK68g66aoa9p0rvti6titgjpkpq
2024-10-28 01:12:23 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK3kf3tbt2jmd6gbfgh55c0hwv2
2024-10-28 01:12:23 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK33q8q6ex324k4mhc5hinwarnx
2024-10-28 01:12:23 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists car
2024-10-28 01:12:23 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists feature
2024-10-28 01:12:23 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant
2024-10-28 01:12:23 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant_feature
2024-10-28 01:12:23 [restartedMain] DEBUG org.hibernate.SQL - create table car (id bigint not null auto_increment, brand varchar(255), model varchar(255), thumbnail_url varchar(255), primary key (id)) engine=InnoDB
2024-10-28 01:12:23 [restartedMain] DEBUG org.hibernate.SQL - create table feature (id bigint not null auto_increment, name varchar(255) not null, primary key (id)) engine=InnoDB
2024-10-28 01:12:23 [restartedMain] DEBUG org.hibernate.SQL - create table variant (fuel_type tinyint check (fuel_type between 0 and 3), transmission_type tinyint check (transmission_type between 0 and 1), year_of_manufacture integer, car_id bigint, id bigint not null auto_increment, price bigint, name varchar(255) not null, related_cars json, primary key (id)) engine=InnoDB
2024-10-28 01:12:23 [restartedMain] DEBUG org.hibernate.SQL - create table variant_feature (car_id bigint, feature_id bigint not null, id bigint not null auto_increment, variant_id bigint, value varchar(255), primary key (id)) engine=InnoDB
2024-10-28 01:12:24 [restartedMain] DEBUG org.hibernate.SQL - alter table car add constraint UK1bh6mrchex5vsyjfvht8u4dhu unique (brand, model)
2024-10-28 01:12:24 [restartedMain] DEBUG org.hibernate.SQL - alter table feature add constraint UKjhueeftkn8ve8th8m8a2878dr unique (name)
2024-10-28 01:12:24 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint UKpq7n803hfxn02sey0e8fowmj5 unique (name)
2024-10-28 01:12:24 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint FK68g66aoa9p0rvti6titgjpkpq foreign key (car_id) references car (id)
2024-10-28 01:12:24 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK3kf3tbt2jmd6gbfgh55c0hwv2 foreign key (feature_id) references feature (id)
2024-10-28 01:12:24 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK33q8q6ex324k4mhc5hinwarnx foreign key (variant_id) references variant (id)
2024-10-28 01:12:24 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 01:12:25 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 01:12:25 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-10-28 01:12:25 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-28 01:12:25 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-28 01:12:25 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Started CarsearchApplication in 7.767 seconds (process running for 363.925)
2024-10-28 01:12:25 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2024-10-28 01:12:48 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-28 01:12:48 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-28 01:12:48 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:12:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:12:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:12:50 [http-nio-8080-exec-2] INFO  c.c.c.s.impl.FeatureServiceImpl - Successfully saved Features
2024-10-28 01:13:01 [http-nio-8080-exec-3] DEBUG c.c.c.service.impl.CarServiceImpl - Starting addCar process for CarDto: [CarDto(id=null, brand=Honda, model=City, thumbnailUrl=https://example.com/images/honda_city.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1500000, name=City ZX CVT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=8-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Cruise Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1300000, name=City V MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1600000, name=City ZX Diesel CVT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1400000, name=City V Diesel MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1550000, name=City VX CVT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=8-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Power Folding Mirrors), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Ambient Lighting), VariantFeatureDto(id=null, variantId=null, featureId=12, featureName=null, value=Wireless Charger)])]), CarDto(id=null, brand=Honda, model=Amaze, thumbnailUrl=https://example.com/images/honda_amaze.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=950000, name=Amaze VX CVT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=870000, name=Amaze S Diesel MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1000000, name=Amaze ZX CVT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Auto Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=8-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Rear Camera)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=820000, name=Amaze V MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=920000, name=Amaze S CVT Diesel, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=LED Headlamps)])]), CarDto(id=null, brand=Hyundai, model=i20, thumbnailUrl=https://example.com/images/hyundai_i20.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1100000, name=i20 Asta (O) AT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Rear Wiper)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=900000, name=i20 Sportz MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=950000, name=i20 Magna AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Touchscreen Display)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1000000, name=i20 Asta MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1150000, name=i20 N Line, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Wiper), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera)])]), CarDto(id=null, brand=Hyundai, model=Venue, thumbnailUrl=https://example.com/images/hyundai_venue.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1300000, name=Venue SX (O) AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Automatic Headlamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=900000, name=Venue S Diesel MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Defogger), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1250000, name=Venue SX AT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=LED DRLs), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=850000, name=Venue E MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1350000, name=Venue SX Plus Diesel AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rear Defogger)])]), CarDto(id=null, brand=Tata, model=Nexon, thumbnailUrl=https://example.com/images/tata_nexon.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1400000, name=Nexon XZ+ AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Hill Start Assist), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Rear AC Vents)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1050000, name=Nexon XM MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Touchscreen Infotainment)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1150000, name=Nexon XMA AMT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Power Folding Mirrors), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Reverse Camera)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1000000, name=Nexon XE MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Manual AC), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1500000, name=Nexon XZ+ Dual Tone, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Hill Start Assist), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rain-Sensing Wipers)])]), CarDto(id=null, brand=Tata, model=Harrier, thumbnailUrl=https://example.com/images/tata_harrier.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2200000, name=Harrier XZA+ AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Electronic Stability Program)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1900000, name=Harrier XT Plus MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=8-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2250000, name=Harrier Dark Edition AT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Dark Interior Theme), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Hill Descent Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rain-Sensing Wipers), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Push Start Button)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1700000, name=Harrier XE MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Steering)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2400000, name=Harrier Kaziranga Edition, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Electronic Stability Program), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Hill Hold Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Push Start Button)])]), CarDto(id=null, brand=Mahindra, model=XUV700, thumbnailUrl=https://example.com/images/mahindra_xuv700.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2400000, name=XUV700 AX7 L AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=7 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Dual-Zone Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Blind Spot Monitoring)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=2000000, name=XUV700 AX5 MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Power Folding Mirrors)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=2250000, name=XUV700 AX7 AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rain-Sensing Wipers), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Hill Hold Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1800000, name=XUV700 MX MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=LED DRLs), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Touchscreen Infotainment)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2600000, name=XUV700 AX7 AWD AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=All-Wheel Drive), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=7 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Hill Descent Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Blind Spot Monitoring), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rain-Sensing Wipers)])]), CarDto(id=null, brand=Mahindra, model=Thar, thumbnailUrl=https://example.com/images/mahindra_thar.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1700000, name=Thar LX 4x4 AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1500000, name=Thar AX Opt MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Steering)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1600000, name=Thar LX 4x2 AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x2 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1400000, name=Thar AX MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x2 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1750000, name=Thar LX Hard Top AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control)])]), CarDto(id=null, brand=Maruti Suzuki, model=Baleno, thumbnailUrl=https://example.com/images/maruti_baleno.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=970000, name=Baleno Alpha CVT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Alloy Wheels)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=850000, name=Baleno Zeta MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=920000, name=Baleno Delta AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Alloy Wheels)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=750000, name=Baleno Sigma MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Manual AC), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1030000, name=Baleno Alpha AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Rear AC Vents)])]), CarDto(id=null, brand=Maruti Suzuki, model=Swift, thumbnailUrl=https://example.com/images/maruti_swift.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=850000, name=Swift ZXI+ AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=720000, name=Swift VXI MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Manual AC)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=790000, name=Swift VXI AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Reverse Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=650000, name=Swift LXI MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=900000, name=Swift ZXI+ Dual Tone, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Headlamps)])])]
2024-10-28 01:13:01 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed: java.lang.Error: Unresolved compilation problem: 
	The method setFeatureId(Long) is undefined for the type VariantFeature
] with root cause
java.lang.Error: Unresolved compilation problem: 
	The method setFeatureId(Long) is undefined for the type VariantFeature

	at com.carwiki.carsearch.mapper.CarMapper.variantFeatureDtoToEntity(CarMapper.java:125)
	at com.carwiki.carsearch.mapper.CarMapper.lambda$2(CarMapper.java:63)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at com.carwiki.carsearch.mapper.CarMapper.variantDtoToEntity(CarMapper.java:64)
	at com.carwiki.carsearch.mapper.CarMapper.lambda$0(CarMapper.java:24)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at com.carwiki.carsearch.mapper.CarMapper.carDtoToEntity(CarMapper.java:25)
	at com.carwiki.carsearch.service.impl.CarServiceImpl.lambda$0(CarServiceImpl.java:40)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at com.carwiki.carsearch.service.impl.CarServiceImpl.addCars(CarServiceImpl.java:41)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.carwiki.carsearch.service.impl.CarServiceImpl$$SpringCGLIB$$0.addCars(<generated>)
	at com.carwiki.carsearch.controller.CarController.addCar(CarController.java:20)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-10-28 01:15:12 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 01:15:12 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2024-10-28 01:15:12 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2024-10-28 01:15:47 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Starting CarsearchApplication using Java 21.0.5 with PID 28264 (C:\carwiki\carwiki\target\classes started by dumes in C:\carwiki\carwiki)
2024-10-28 01:15:47 [restartedMain] DEBUG c.c.carsearch.CarsearchApplication - Running with Spring Boot v3.3.4, Spring v6.1.13
2024-10-28 01:15:47 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - No active profile set, falling back to 1 default profile: "default"
2024-10-28 01:15:47 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-10-28 01:15:47 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-10-28 01:15:47 [restartedMain] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\carwiki\carwiki\compose.yaml'
2024-10-28 01:15:52 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Created
2024-10-28 01:15:52 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Created
2024-10-28 01:15:52 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Created
2024-10-28 01:15:52 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Starting
2024-10-28 01:15:52 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Starting
2024-10-28 01:15:52 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Starting
2024-10-28 01:15:54 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Started
2024-10-28 01:15:54 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Started
2024-10-28 01:15:54 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Started
2024-10-28 01:15:54 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Waiting
2024-10-28 01:15:54 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Waiting
2024-10-28 01:15:54 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Waiting
2024-10-28 01:15:55 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-mysql-1  Healthy
2024-10-28 01:15:55 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-redis-1  Healthy
2024-10-28 01:15:55 [OutputReader-stderr] INFO  o.s.b.docker.compose.core.DockerCli -  Container carwiki-elasticsearch-1  Healthy
2024-10-28 01:16:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:16:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2024-10-28 01:16:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:16:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:16:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:16:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
2024-10-28 01:16:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 260 ms. Found 0 Elasticsearch repository interfaces.
2024-10-28 01:16:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:16:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2024-10-28 01:16:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:16:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:16:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:16:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository
2024-10-28 01:16:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 0 Reactive Elasticsearch repository interfaces.
2024-10-28 01:16:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:16:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-10-28 01:16:26 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1102 ms. Found 4 JPA repository interfaces.
2024-10-28 01:16:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-10-28 01:16:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-10-28 01:16:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.CarRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:16:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.FeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:16:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantFeatureRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:16:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.carwiki.carsearch.repository.VariantRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-10-28 01:16:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 96 ms. Found 0 Redis repository interfaces.
2024-10-28 01:16:32 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-28 01:16:32 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-28 01:16:33 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-10-28 01:16:33 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-28 01:16:33 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-28 01:16:33 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 16205 ms
2024-10-28 01:16:37 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-10-28 01:16:38 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2024-10-28 01:16:38 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-10-28 01:16:40 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-10-28 01:16:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-28 01:16:43 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@21501c78
2024-10-28 01:16:43 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-28 01:16:44 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-10-28 01:16:49 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-10-28 01:16:49 [restartedMain] DEBUG org.hibernate.SQL - alter table variant drop foreign key FK68g66aoa9p0rvti6titgjpkpq
2024-10-28 01:16:50 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK3kf3tbt2jmd6gbfgh55c0hwv2
2024-10-28 01:16:50 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature drop foreign key FK33q8q6ex324k4mhc5hinwarnx
2024-10-28 01:16:50 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists car
2024-10-28 01:16:50 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists feature
2024-10-28 01:16:50 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant
2024-10-28 01:16:50 [restartedMain] DEBUG org.hibernate.SQL - drop table if exists variant_feature
2024-10-28 01:16:50 [restartedMain] DEBUG org.hibernate.SQL - create table car (id bigint not null auto_increment, brand varchar(255), model varchar(255), thumbnail_url varchar(255), primary key (id)) engine=InnoDB
2024-10-28 01:16:50 [restartedMain] DEBUG org.hibernate.SQL - create table feature (id bigint not null auto_increment, name varchar(255) not null, primary key (id)) engine=InnoDB
2024-10-28 01:16:50 [restartedMain] DEBUG org.hibernate.SQL - create table variant (fuel_type tinyint check (fuel_type between 0 and 3), transmission_type tinyint check (transmission_type between 0 and 1), year_of_manufacture integer, car_id bigint, id bigint not null auto_increment, price bigint, name varchar(255) not null, related_cars json, primary key (id)) engine=InnoDB
2024-10-28 01:16:50 [restartedMain] DEBUG org.hibernate.SQL - create table variant_feature (car_id bigint, feature_id bigint not null, id bigint not null auto_increment, variant_id bigint, value varchar(255), primary key (id)) engine=InnoDB
2024-10-28 01:16:51 [restartedMain] DEBUG org.hibernate.SQL - alter table car add constraint UK1bh6mrchex5vsyjfvht8u4dhu unique (brand, model)
2024-10-28 01:16:51 [restartedMain] DEBUG org.hibernate.SQL - alter table feature add constraint UKjhueeftkn8ve8th8m8a2878dr unique (name)
2024-10-28 01:16:51 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint UKpq7n803hfxn02sey0e8fowmj5 unique (name)
2024-10-28 01:16:51 [restartedMain] DEBUG org.hibernate.SQL - alter table variant add constraint FK68g66aoa9p0rvti6titgjpkpq foreign key (car_id) references car (id)
2024-10-28 01:16:51 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK3kf3tbt2jmd6gbfgh55c0hwv2 foreign key (feature_id) references feature (id)
2024-10-28 01:16:51 [restartedMain] DEBUG org.hibernate.SQL - alter table variant_feature add constraint FK33q8q6ex324k4mhc5hinwarnx foreign key (variant_id) references variant (id)
2024-10-28 01:16:52 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 01:16:54 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-10-28 01:16:59 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-10-28 01:16:59 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-28 01:16:59 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-28 01:16:59 [restartedMain] INFO  c.c.carsearch.CarsearchApplication - Started CarsearchApplication in 76.062 seconds (process running for 79.183)
2024-10-28 01:17:47 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-28 01:17:47 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-28 01:17:47 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2024-10-28 01:17:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:17:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:17:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:17:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:17:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:17:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:17:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:17:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:17:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:17:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:17:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:17:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:17:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:17:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:17:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - insert into feature (name) values (?)
2024-10-28 01:17:49 [http-nio-8080-exec-1] INFO  c.c.c.s.impl.FeatureServiceImpl - Successfully saved Features
2024-10-28 01:18:10 [http-nio-8080-exec-3] DEBUG c.c.c.service.impl.CarServiceImpl - Starting addCar process for CarDto: [CarDto(id=null, brand=Honda, model=City, thumbnailUrl=https://example.com/images/honda_city.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1500000, name=City ZX CVT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=8-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Cruise Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1300000, name=City V MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1600000, name=City ZX Diesel CVT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1400000, name=City V Diesel MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1550000, name=City VX CVT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=8-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Power Folding Mirrors), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Ambient Lighting), VariantFeatureDto(id=null, variantId=null, featureId=12, featureName=null, value=Wireless Charger)])]), CarDto(id=null, brand=Honda, model=Amaze, thumbnailUrl=https://example.com/images/honda_amaze.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=950000, name=Amaze VX CVT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=870000, name=Amaze S Diesel MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen Display), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1000000, name=Amaze ZX CVT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Android Auto/Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Auto Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=8-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Rear Camera)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=820000, name=Amaze V MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=920000, name=Amaze S CVT Diesel, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=LED Headlamps)])]), CarDto(id=null, brand=Hyundai, model=i20, thumbnailUrl=https://example.com/images/hyundai_i20.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1100000, name=i20 Asta (O) AT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Rear Wiper)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=900000, name=i20 Sportz MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=950000, name=i20 Magna AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Touchscreen Display)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1000000, name=i20 Asta MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=LED DRLs)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1150000, name=i20 N Line, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Wiper), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera)])]), CarDto(id=null, brand=Hyundai, model=Venue, thumbnailUrl=https://example.com/images/hyundai_venue.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1300000, name=Venue SX (O) AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Automatic Headlamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=900000, name=Venue S Diesel MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Defogger), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1250000, name=Venue SX AT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Auto-Dimming IRVM), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=LED DRLs), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=850000, name=Venue E MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=2 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Eco Mode)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1350000, name=Venue SX Plus Diesel AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Wireless Charger), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rear Defogger)])]), CarDto(id=null, brand=Tata, model=Nexon, thumbnailUrl=https://example.com/images/tata_nexon.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1400000, name=Nexon XZ+ AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Hill Start Assist), VariantFeatureDto(id=null, variantId=null, featureId=11, featureName=null, value=Rear AC Vents)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1050000, name=Nexon XM MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Eco Mode), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Touchscreen Infotainment)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1150000, name=Nexon XMA AMT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Power Folding Mirrors), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Reverse Camera)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1000000, name=Nexon XE MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Manual AC), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1500000, name=Nexon XZ+ Dual Tone, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Hill Start Assist), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rain-Sensing Wipers)])]), CarDto(id=null, brand=Tata, model=Harrier, thumbnailUrl=https://example.com/images/tata_harrier.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2200000, name=Harrier XZA+ AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Electronic Stability Program)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1900000, name=Harrier XT Plus MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=8-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2250000, name=Harrier Dark Edition AT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Dark Interior Theme), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Hill Descent Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rain-Sensing Wipers), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Push Start Button)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1700000, name=Harrier XE MT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Steering)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2400000, name=Harrier Kaziranga Edition, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Electronic Stability Program), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Hill Hold Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Rear AC Vents), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Terrain Response Modes), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Push Start Button)])]), CarDto(id=null, brand=Mahindra, model=XUV700, thumbnailUrl=https://example.com/images/mahindra_xuv700.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2400000, name=XUV700 AX7 L AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=7 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Dual-Zone Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Blind Spot Monitoring)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=2000000, name=XUV700 AX5 MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=7-Inch Touchscreen), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Power Folding Mirrors)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=2250000, name=XUV700 AX7 AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rain-Sensing Wipers), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Hill Hold Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1800000, name=XUV700 MX MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=LED DRLs), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Touchscreen Infotainment)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=2600000, name=XUV700 AX7 AWD AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=All-Wheel Drive), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=7 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Panoramic Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=360-Degree Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Hill Descent Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Blind Spot Monitoring), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Rain-Sensing Wipers)])]), CarDto(id=null, brand=Mahindra, model=Thar, thumbnailUrl=https://example.com/images/mahindra_thar.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1700000, name=Thar LX 4x4 AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Fog Lamps)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=1500000, name=Thar AX Opt MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Power Steering)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1600000, name=Thar LX 4x2 AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x2 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=1400000, name=Thar AX MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x2 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Rear Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Diesel, price=1750000, name=Thar LX Hard Top AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=4x4 Drivetrain), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Fog Lamps), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control)])]), CarDto(id=null, brand=Maruti Suzuki, model=Baleno, thumbnailUrl=https://example.com/images/maruti_baleno.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=970000, name=Baleno Alpha CVT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Electronic Stability Control), VariantFeatureDto(id=null, variantId=null, featureId=10, featureName=null, value=Alloy Wheels)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=850000, name=Baleno Zeta MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=920000, name=Baleno Delta AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Rear Parking Camera), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Android Auto), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Automatic Headlamps), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Alloy Wheels)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=750000, name=Baleno Sigma MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Manual AC), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Steering Mounted Controls)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=1030000, name=Baleno Alpha AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Sunroof), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Push Start Button), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Climate Control), VariantFeatureDto(id=null, variantId=null, featureId=9, featureName=null, value=Rear AC Vents)])]), CarDto(id=null, brand=Maruti Suzuki, model=Swift, thumbnailUrl=https://example.com/images/maruti_swift.jpg, variants=[VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=850000, name=Swift ZXI+ AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=4 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Rear Parking Sensors)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Petrol, price=720000, name=Swift VXI MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Steering Mounted Controls), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Manual AC)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=790000, name=Swift VXI AT, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Apple CarPlay), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=ABS), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Power Windows), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Reverse Parking Sensors), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Cruise Control)]), VariantDto(id=null, carId=null, transmissionType=Manual, fuelType=Diesel, price=650000, name=Swift LXI MT, yearOfManufacture=2023, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Fabric Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=Manual Windows), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=Dual Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Power Steering), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Bluetooth Connectivity)]), VariantDto(id=null, carId=null, transmissionType=Automatic, fuelType=Petrol, price=900000, name=Swift ZXI+ Dual Tone, yearOfManufacture=2024, relatedCars=null, features=[VariantFeatureDto(id=null, variantId=null, featureId=1, featureName=null, value=Leather Seats), VariantFeatureDto(id=null, variantId=null, featureId=2, featureName=null, value=ABS with EBD), VariantFeatureDto(id=null, variantId=null, featureId=3, featureName=null, value=6 Airbags), VariantFeatureDto(id=null, variantId=null, featureId=4, featureName=null, value=Cruise Control), VariantFeatureDto(id=null, variantId=null, featureId=5, featureName=null, value=Touchscreen Infotainment), VariantFeatureDto(id=null, variantId=null, featureId=6, featureName=null, value=Reverse Camera), VariantFeatureDto(id=null, variantId=null, featureId=7, featureName=null, value=Keyless Entry), VariantFeatureDto(id=null, variantId=null, featureId=8, featureName=null, value=Automatic Headlamps)])])]
2024-10-28 01:18:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:18:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:18:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:18:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:18:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:18:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:18:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:18:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:18:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:18:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:18:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:18:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select f1_0.id,f1_0.name from feature f1_0 where f1_0.id=?
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG c.c.c.service.impl.CarServiceImpl - Mapped CarDto to Car entity: [com.carwiki.carsearch.model.Car@1b86215b, com.carwiki.carsearch.model.Car@27244773, com.carwiki.carsearch.model.Car@7cb3c120, com.carwiki.carsearch.model.Car@52778896, com.carwiki.carsearch.model.Car@78d1e77a, com.carwiki.carsearch.model.Car@7d4b38cc, com.carwiki.carsearch.model.Car@1f134c84, com.carwiki.carsearch.model.Car@714e54c8, com.carwiki.carsearch.model.Car@6d397ac, com.carwiki.carsearch.model.Car@227a52e2]
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into car (brand,model,thumbnail_url) values (?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant (car_id,fuel_type,name,price,related_cars,transmission_type,year_of_manufacture) values (?,?,?,?,cast(? as json),?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - insert into variant_feature (car_id,feature_id,value,variant_id) values (?,?,?,?)
2024-10-28 01:18:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0
2024-10-28 01:18:18 [http-nio-8080-exec-3] INFO  c.c.c.service.impl.CarServiceImpl - Successfully saved Cars
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - update variant set car_id=?,fuel_type=?,name=?,price=?,related_cars=cast(? as json),transmission_type=?,year_of_manufacture=? where id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.car_id,v1_0.id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.car_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select c1_0.id,c1_0.brand,c1_0.model,c1_0.thumbnail_url from car c1_0 where c1_0.id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select f1_0.variant_id,f1_0.id,f1_0.car_id,f1_0.feature_id,f2_0.id,f2_0.name,f1_0.value from variant_feature f1_0 left join feature f2_0 on f2_0.id=f1_0.feature_id where f1_0.variant_id=?
2024-10-28 01:18:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - select v1_0.id,v1_0.car_id,v1_0.fuel_type,v1_0.name,v1_0.price,v1_0.related_cars,v1_0.transmission_type,v1_0.year_of_manufacture from variant v1_0 where v1_0.id in (?,?,?,?,?,?,?,?,?,?)
2024-10-28 01:29:50 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-10-28 01:29:50 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-10-28 01:29:50 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
